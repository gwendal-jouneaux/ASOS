/*
 * generated by Xtext 2.25.0
 */
grammar InternalAdaptSem;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
}

@lexer::header {
package fr.irisa.diverse.adaptivesemantics.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package fr.irisa.diverse.adaptivesemantics.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import fr.irisa.diverse.adaptivesemantics.services.AdaptSemGrammarAccess;

}
@parser::members {
	private AdaptSemGrammarAccess grammarAccess;

	public void setGrammarAccess(AdaptSemGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleAdaptiveSemantics
entryRuleAdaptiveSemantics
:
{ before(grammarAccess.getAdaptiveSemanticsRule()); }
	 ruleAdaptiveSemantics
{ after(grammarAccess.getAdaptiveSemanticsRule()); } 
	 EOF 
;

// Rule AdaptiveSemantics
ruleAdaptiveSemantics 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAdaptiveSemanticsAccess().getGroup()); }
		(rule__AdaptiveSemantics__Group__0)
		{ after(grammarAccess.getAdaptiveSemanticsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getGroup()); }
		(rule__Model__Group__0)
		{ after(grammarAccess.getModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImport
entryRuleImport
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImportAccess().getGroup()); }
		(rule__Import__Group__0)
		{ after(grammarAccess.getImportAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRule
entryRuleRule
:
{ before(grammarAccess.getRuleRule()); }
	 ruleRule
{ after(grammarAccess.getRuleRule()); } 
	 EOF 
;

// Rule Rule
ruleRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRuleAccess().getGroup()); }
		(rule__Rule__Group__0)
		{ after(grammarAccess.getRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCondition
entryRuleCondition
:
{ before(grammarAccess.getConditionRule()); }
	 ruleCondition
{ after(grammarAccess.getConditionRule()); } 
	 EOF 
;

// Rule Condition
ruleCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionAccess().getGroup()); }
		(rule__Condition__Group__0)
		{ after(grammarAccess.getConditionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInput
entryRuleInput
:
{ before(grammarAccess.getInputRule()); }
	 ruleInput
{ after(grammarAccess.getInputRule()); } 
	 EOF 
;

// Rule Input
ruleInput 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInputAccess().getGroup()); }
		(rule__Input__Group__0)
		{ after(grammarAccess.getInputAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOutput
entryRuleOutput
:
{ before(grammarAccess.getOutputRule()); }
	 ruleOutput
{ after(grammarAccess.getOutputRule()); } 
	 EOF 
;

// Rule Output
ruleOutput 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOutputAccess().getGroup()); }
		(rule__Output__Group__0)
		{ after(grammarAccess.getOutputAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBinding
entryRuleBinding
:
{ before(grammarAccess.getBindingRule()); }
	 ruleBinding
{ after(grammarAccess.getBindingRule()); } 
	 EOF 
;

// Rule Binding
ruleBinding 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBindingAccess().getGroup()); }
		(rule__Binding__Group__0)
		{ after(grammarAccess.getBindingAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAssignable
entryRuleAssignable
:
{ before(grammarAccess.getAssignableRule()); }
	 ruleAssignable
{ after(grammarAccess.getAssignableRule()); } 
	 EOF 
;

// Rule Assignable
ruleAssignable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssignableAccess().getAlternatives()); }
		(rule__Assignable__Alternatives)
		{ after(grammarAccess.getAssignableAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAssignee
entryRuleAssignee
:
{ before(grammarAccess.getAssigneeRule()); }
	 ruleAssignee
{ after(grammarAccess.getAssigneeRule()); } 
	 EOF 
;

// Rule Assignee
ruleAssignee 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssigneeAccess().getAlternatives()); }
		(rule__Assignee__Alternatives)
		{ after(grammarAccess.getAssigneeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSemanticDomainAccess
entryRuleSemanticDomainAccess
:
{ before(grammarAccess.getSemanticDomainAccessRule()); }
	 ruleSemanticDomainAccess
{ after(grammarAccess.getSemanticDomainAccessRule()); } 
	 EOF 
;

// Rule SemanticDomainAccess
ruleSemanticDomainAccess 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSemanticDomainAccessAccess().getGroup()); }
		(rule__SemanticDomainAccess__Group__0)
		{ after(grammarAccess.getSemanticDomainAccessAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTerminalAccessExpression
entryRuleTerminalAccessExpression
:
{ before(grammarAccess.getTerminalAccessExpressionRule()); }
	 ruleTerminalAccessExpression
{ after(grammarAccess.getTerminalAccessExpressionRule()); } 
	 EOF 
;

// Rule TerminalAccessExpression
ruleTerminalAccessExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTerminalAccessExpressionAccess().getAlternatives()); }
		(rule__TerminalAccessExpression__Alternatives)
		{ after(grammarAccess.getTerminalAccessExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSelf
entryRuleSelf
:
{ before(grammarAccess.getSelfRule()); }
	 ruleSelf
{ after(grammarAccess.getSelfRule()); } 
	 EOF 
;

// Rule Self
ruleSelf 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSelfAccess().getGroup()); }
		(rule__Self__Group__0)
		{ after(grammarAccess.getSelfAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConclusion
entryRuleConclusion
:
{ before(grammarAccess.getConclusionRule()); }
	 ruleConclusion
{ after(grammarAccess.getConclusionRule()); } 
	 EOF 
;

// Rule Conclusion
ruleConclusion 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConclusionAccess().getGroup()); }
		(rule__Conclusion__Group__0)
		{ after(grammarAccess.getConclusionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePremise
entryRulePremise
:
{ before(grammarAccess.getPremiseRule()); }
	 rulePremise
{ after(grammarAccess.getPremiseRule()); } 
	 EOF 
;

// Rule Premise
rulePremise 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPremiseAccess().getGroup()); }
		(rule__Premise__Group__0)
		{ after(grammarAccess.getPremiseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTermDef
entryRuleTermDef
:
{ before(grammarAccess.getTermDefRule()); }
	 ruleTermDef
{ after(grammarAccess.getTermDefRule()); } 
	 EOF 
;

// Rule TermDef
ruleTermDef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTermDefAccess().getAlternatives()); }
		(rule__TermDef__Alternatives)
		{ after(grammarAccess.getTermDefAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTermRef
entryRuleTermRef
:
{ before(grammarAccess.getTermRefRule()); }
	 ruleTermRef
{ after(grammarAccess.getTermRefRule()); } 
	 EOF 
;

// Rule TermRef
ruleTermRef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTermRefAccess().getAlternatives()); }
		(rule__TermRef__Alternatives)
		{ after(grammarAccess.getTermRefAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSingleTermDef
entryRuleSingleTermDef
:
{ before(grammarAccess.getSingleTermDefRule()); }
	 ruleSingleTermDef
{ after(grammarAccess.getSingleTermDefRule()); } 
	 EOF 
;

// Rule SingleTermDef
ruleSingleTermDef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSingleTermDefAccess().getAlternatives()); }
		(rule__SingleTermDef__Alternatives)
		{ after(grammarAccess.getSingleTermDefAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSingleTermRef
entryRuleSingleTermRef
:
{ before(grammarAccess.getSingleTermRefRule()); }
	 ruleSingleTermRef
{ after(grammarAccess.getSingleTermRefRule()); } 
	 EOF 
;

// Rule SingleTermRef
ruleSingleTermRef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSingleTermRefAccess().getAlternatives()); }
		(rule__SingleTermRef__Alternatives)
		{ after(grammarAccess.getSingleTermRefAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDefConfiguration
entryRuleDefConfiguration
:
{ before(grammarAccess.getDefConfigurationRule()); }
	 ruleDefConfiguration
{ after(grammarAccess.getDefConfigurationRule()); } 
	 EOF 
;

// Rule DefConfiguration
ruleDefConfiguration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDefConfigurationAccess().getGroup()); }
		(rule__DefConfiguration__Group__0)
		{ after(grammarAccess.getDefConfigurationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRefConfiguration
entryRuleRefConfiguration
:
{ before(grammarAccess.getRefConfigurationRule()); }
	 ruleRefConfiguration
{ after(grammarAccess.getRefConfigurationRule()); } 
	 EOF 
;

// Rule RefConfiguration
ruleRefConfiguration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRefConfigurationAccess().getGroup()); }
		(rule__RefConfiguration__Group__0)
		{ after(grammarAccess.getRefConfigurationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSymbolDef
entryRuleSymbolDef
:
{ before(grammarAccess.getSymbolDefRule()); }
	 ruleSymbolDef
{ after(grammarAccess.getSymbolDefRule()); } 
	 EOF 
;

// Rule SymbolDef
ruleSymbolDef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSymbolDefAccess().getGroup()); }
		(rule__SymbolDef__Group__0)
		{ after(grammarAccess.getSymbolDefAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSymbolRef
entryRuleSymbolRef
:
{ before(grammarAccess.getSymbolRefRule()); }
	 ruleSymbolRef
{ after(grammarAccess.getSymbolRefRule()); } 
	 EOF 
;

// Rule SymbolRef
ruleSymbolRef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSymbolRefAccess().getGroup()); }
		(rule__SymbolRef__Group__0)
		{ after(grammarAccess.getSymbolRefAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleListDef
entryRuleListDef
:
{ before(grammarAccess.getListDefRule()); }
	 ruleListDef
{ after(grammarAccess.getListDefRule()); } 
	 EOF 
;

// Rule ListDef
ruleListDef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getListDefAccess().getGroup()); }
		(rule__ListDef__Group__0)
		{ after(grammarAccess.getListDefAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleListRef
entryRuleListRef
:
{ before(grammarAccess.getListRefRule()); }
	 ruleListRef
{ after(grammarAccess.getListRefRule()); } 
	 EOF 
;

// Rule ListRef
ruleListRef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getListRefAccess().getGroup()); }
		(rule__ListRef__Group__0)
		{ after(grammarAccess.getListRefAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVoidList
entryRuleVoidList
:
{ before(grammarAccess.getVoidListRule()); }
	 ruleVoidList
{ after(grammarAccess.getVoidListRule()); } 
	 EOF 
;

// Rule VoidList
ruleVoidList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVoidListAccess().getGroup()); }
		(rule__VoidList__Group__0)
		{ after(grammarAccess.getVoidListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCondExpr
entryRuleCondExpr
:
{ before(grammarAccess.getCondExprRule()); }
	 ruleCondExpr
{ after(grammarAccess.getCondExprRule()); } 
	 EOF 
;

// Rule CondExpr
ruleCondExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCondExprAccess().getAlternatives()); }
		(rule__CondExpr__Alternatives)
		{ after(grammarAccess.getCondExprAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCondNot
entryRuleCondNot
:
{ before(grammarAccess.getCondNotRule()); }
	 ruleCondNot
{ after(grammarAccess.getCondNotRule()); } 
	 EOF 
;

// Rule CondNot
ruleCondNot 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCondNotAccess().getGroup()); }
		(rule__CondNot__Group__0)
		{ after(grammarAccess.getCondNotAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCondOr
entryRuleCondOr
:
{ before(grammarAccess.getCondOrRule()); }
	 ruleCondOr
{ after(grammarAccess.getCondOrRule()); } 
	 EOF 
;

// Rule CondOr
ruleCondOr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCondOrAccess().getGroup()); }
		(rule__CondOr__Group__0)
		{ after(grammarAccess.getCondOrAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCondAnd
entryRuleCondAnd
:
{ before(grammarAccess.getCondAndRule()); }
	 ruleCondAnd
{ after(grammarAccess.getCondAndRule()); } 
	 EOF 
;

// Rule CondAnd
ruleCondAnd 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCondAndAccess().getGroup()); }
		(rule__CondAnd__Group__0)
		{ after(grammarAccess.getCondAndAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCondEquality
entryRuleCondEquality
:
{ before(grammarAccess.getCondEqualityRule()); }
	 ruleCondEquality
{ after(grammarAccess.getCondEqualityRule()); } 
	 EOF 
;

// Rule CondEquality
ruleCondEquality 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCondEqualityAccess().getAlternatives()); }
		(rule__CondEquality__Alternatives)
		{ after(grammarAccess.getCondEqualityAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCondComparison
entryRuleCondComparison
:
{ before(grammarAccess.getCondComparisonRule()); }
	 ruleCondComparison
{ after(grammarAccess.getCondComparisonRule()); } 
	 EOF 
;

// Rule CondComparison
ruleCondComparison 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCondComparisonAccess().getAlternatives()); }
		(rule__CondComparison__Alternatives)
		{ after(grammarAccess.getCondComparisonAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCondIs
entryRuleCondIs
:
{ before(grammarAccess.getCondIsRule()); }
	 ruleCondIs
{ after(grammarAccess.getCondIsRule()); } 
	 EOF 
;

// Rule CondIs
ruleCondIs 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCondIsAccess().getGroup()); }
		(rule__CondIs__Group__0)
		{ after(grammarAccess.getCondIsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpr
entryRuleExpr
:
{ before(grammarAccess.getExprRule()); }
	 ruleExpr
{ after(grammarAccess.getExprRule()); } 
	 EOF 
;

// Rule Expr
ruleExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExprAccess().getOrParserRuleCall()); }
		ruleOr
		{ after(grammarAccess.getExprAccess().getOrParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOr
entryRuleOr
:
{ before(grammarAccess.getOrRule()); }
	 ruleOr
{ after(grammarAccess.getOrRule()); } 
	 EOF 
;

// Rule Or
ruleOr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOrAccess().getGroup()); }
		(rule__Or__Group__0)
		{ after(grammarAccess.getOrAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAnd
entryRuleAnd
:
{ before(grammarAccess.getAndRule()); }
	 ruleAnd
{ after(grammarAccess.getAndRule()); } 
	 EOF 
;

// Rule And
ruleAnd 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAndAccess().getGroup()); }
		(rule__And__Group__0)
		{ after(grammarAccess.getAndAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEquality
entryRuleEquality
:
{ before(grammarAccess.getEqualityRule()); }
	 ruleEquality
{ after(grammarAccess.getEqualityRule()); } 
	 EOF 
;

// Rule Equality
ruleEquality 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEqualityAccess().getGroup()); }
		(rule__Equality__Group__0)
		{ after(grammarAccess.getEqualityAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComparison
entryRuleComparison
:
{ before(grammarAccess.getComparisonRule()); }
	 ruleComparison
{ after(grammarAccess.getComparisonRule()); } 
	 EOF 
;

// Rule Comparison
ruleComparison 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComparisonAccess().getGroup()); }
		(rule__Comparison__Group__0)
		{ after(grammarAccess.getComparisonAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePlusOrMinus
entryRulePlusOrMinus
:
{ before(grammarAccess.getPlusOrMinusRule()); }
	 rulePlusOrMinus
{ after(grammarAccess.getPlusOrMinusRule()); } 
	 EOF 
;

// Rule PlusOrMinus
rulePlusOrMinus 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPlusOrMinusAccess().getGroup()); }
		(rule__PlusOrMinus__Group__0)
		{ after(grammarAccess.getPlusOrMinusAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMulOrDiv
entryRuleMulOrDiv
:
{ before(grammarAccess.getMulOrDivRule()); }
	 ruleMulOrDiv
{ after(grammarAccess.getMulOrDivRule()); } 
	 EOF 
;

// Rule MulOrDiv
ruleMulOrDiv 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMulOrDivAccess().getGroup()); }
		(rule__MulOrDiv__Group__0)
		{ after(grammarAccess.getMulOrDivAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimary
entryRulePrimary
:
{ before(grammarAccess.getPrimaryRule()); }
	 rulePrimary
{ after(grammarAccess.getPrimaryRule()); } 
	 EOF 
;

// Rule Primary
rulePrimary 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryAccess().getAlternatives()); }
		(rule__Primary__Alternatives)
		{ after(grammarAccess.getPrimaryAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAtomic
entryRuleAtomic
:
{ before(grammarAccess.getAtomicRule()); }
	 ruleAtomic
{ after(grammarAccess.getAtomicRule()); } 
	 EOF 
;

// Rule Atomic
ruleAtomic 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAtomicAccess().getAlternatives()); }
		(rule__Atomic__Alternatives)
		{ after(grammarAccess.getAtomicAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEString
entryRuleEString
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEStringAccess().getAlternatives()); }
		(rule__EString__Alternatives)
		{ after(grammarAccess.getEStringAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFQN
entryRuleFQN
:
{ before(grammarAccess.getFQNRule()); }
	 ruleFQN
{ after(grammarAccess.getFQNRule()); } 
	 EOF 
;

// Rule FQN
ruleFQN 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFQNAccess().getGroup()); }
		(rule__FQN__Group__0)
		{ after(grammarAccess.getFQNAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperationFQN
entryRuleOperationFQN
:
{ before(grammarAccess.getOperationFQNRule()); }
	 ruleOperationFQN
{ after(grammarAccess.getOperationFQNRule()); } 
	 EOF 
;

// Rule OperationFQN
ruleOperationFQN 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperationFQNAccess().getGroup()); }
		(rule__OperationFQN__Group__0)
		{ after(grammarAccess.getOperationFQNAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Alternatives_7_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAccess().getInputsAssignment_7_1_0()); }
		(rule__Rule__InputsAssignment_7_1_0)
		{ after(grammarAccess.getRuleAccess().getInputsAssignment_7_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getRuleAccess().getOutputsAssignment_7_1_1()); }
		(rule__Rule__OutputsAssignment_7_1_1)
		{ after(grammarAccess.getRuleAccess().getOutputsAssignment_7_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Alternatives_7_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAccess().getInputsAssignment_7_2_1_0()); }
		(rule__Rule__InputsAssignment_7_2_1_0)
		{ after(grammarAccess.getRuleAccess().getInputsAssignment_7_2_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getRuleAccess().getOutputsAssignment_7_2_1_1()); }
		(rule__Rule__OutputsAssignment_7_2_1_1)
		{ after(grammarAccess.getRuleAccess().getOutputsAssignment_7_2_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignable__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignableAccess().getExprParserRuleCall_0()); }
		ruleExpr
		{ after(grammarAccess.getAssignableAccess().getExprParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getAssignableAccess().getRefConfigurationParserRuleCall_1()); }
		ruleRefConfiguration
		{ after(grammarAccess.getAssignableAccess().getRefConfigurationParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getAssignableAccess().getSemanticDomainAccessParserRuleCall_2()); }
		ruleSemanticDomainAccess
		{ after(grammarAccess.getAssignableAccess().getSemanticDomainAccessParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignee__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssigneeAccess().getSymbolDefParserRuleCall_0()); }
		ruleSymbolDef
		{ after(grammarAccess.getAssigneeAccess().getSymbolDefParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getAssigneeAccess().getSemanticDomainAccessParserRuleCall_1()); }
		ruleSemanticDomainAccess
		{ after(grammarAccess.getAssigneeAccess().getSemanticDomainAccessParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalAccessExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTerminalAccessExpressionAccess().getSymbolRefParserRuleCall_0()); }
		ruleSymbolRef
		{ after(grammarAccess.getTerminalAccessExpressionAccess().getSymbolRefParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTerminalAccessExpressionAccess().getSelfParserRuleCall_1()); }
		ruleSelf
		{ after(grammarAccess.getTerminalAccessExpressionAccess().getSelfParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TermDef__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTermDefAccess().getSingleTermDefParserRuleCall_0()); }
		ruleSingleTermDef
		{ after(grammarAccess.getTermDefAccess().getSingleTermDefParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTermDefAccess().getListDefParserRuleCall_1()); }
		ruleListDef
		{ after(grammarAccess.getTermDefAccess().getListDefParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getTermDefAccess().getVoidListParserRuleCall_2()); }
		ruleVoidList
		{ after(grammarAccess.getTermDefAccess().getVoidListParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TermRef__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTermRefAccess().getSingleTermRefParserRuleCall_0()); }
		ruleSingleTermRef
		{ after(grammarAccess.getTermRefAccess().getSingleTermRefParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTermRefAccess().getListRefParserRuleCall_1()); }
		ruleListRef
		{ after(grammarAccess.getTermRefAccess().getListRefParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getTermRefAccess().getVoidListParserRuleCall_2()); }
		ruleVoidList
		{ after(grammarAccess.getTermRefAccess().getVoidListParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleTermDef__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSingleTermDefAccess().getDefConfigurationParserRuleCall_0()); }
		ruleDefConfiguration
		{ after(grammarAccess.getSingleTermDefAccess().getDefConfigurationParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getSingleTermDefAccess().getSymbolDefParserRuleCall_1()); }
		ruleSymbolDef
		{ after(grammarAccess.getSingleTermDefAccess().getSymbolDefParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleTermRef__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSingleTermRefAccess().getRefConfigurationParserRuleCall_0()); }
		(ruleRefConfiguration)
		{ after(grammarAccess.getSingleTermRefAccess().getRefConfigurationParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getSingleTermRefAccess().getSymbolRefParserRuleCall_1()); }
		ruleSymbolRef
		{ after(grammarAccess.getSingleTermRefAccess().getSymbolRefParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CondExpr__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCondExprAccess().getCondOrParserRuleCall_0()); }
		ruleCondOr
		{ after(grammarAccess.getCondExprAccess().getCondOrParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getCondExprAccess().getCondAndParserRuleCall_1()); }
		ruleCondAnd
		{ after(grammarAccess.getCondExprAccess().getCondAndParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getCondExprAccess().getCondEqualityParserRuleCall_2()); }
		ruleCondEquality
		{ after(grammarAccess.getCondExprAccess().getCondEqualityParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getCondExprAccess().getCondComparisonParserRuleCall_3()); }
		ruleCondComparison
		{ after(grammarAccess.getCondExprAccess().getCondComparisonParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getCondExprAccess().getCondNotParserRuleCall_4()); }
		ruleCondNot
		{ after(grammarAccess.getCondExprAccess().getCondNotParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getCondExprAccess().getCondIsParserRuleCall_5()); }
		ruleCondIs
		{ after(grammarAccess.getCondExprAccess().getCondIsParserRuleCall_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CondEquality__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCondEqualityAccess().getGroup_0()); }
		(rule__CondEquality__Group_0__0)
		{ after(grammarAccess.getCondEqualityAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getCondEqualityAccess().getGroup_1()); }
		(rule__CondEquality__Group_1__0)
		{ after(grammarAccess.getCondEqualityAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CondComparison__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCondComparisonAccess().getGroup_0()); }
		(rule__CondComparison__Group_0__0)
		{ after(grammarAccess.getCondComparisonAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getCondComparisonAccess().getGroup_1()); }
		(rule__CondComparison__Group_1__0)
		{ after(grammarAccess.getCondComparisonAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualityAccess().getGroup_1_0_0()); }
		(rule__Equality__Group_1_0_0__0)
		{ after(grammarAccess.getEqualityAccess().getGroup_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getEqualityAccess().getGroup_1_0_1()); }
		(rule__Equality__Group_1_0_1__0)
		{ after(grammarAccess.getEqualityAccess().getGroup_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonAccess().getGroup_1_0_0()); }
		(rule__Comparison__Group_1_0_0__0)
		{ after(grammarAccess.getComparisonAccess().getGroup_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonAccess().getGroup_1_0_1()); }
		(rule__Comparison__Group_1_0_1__0)
		{ after(grammarAccess.getComparisonAccess().getGroup_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPlusOrMinusAccess().getGroup_1_0_0()); }
		(rule__PlusOrMinus__Group_1_0_0__0)
		{ after(grammarAccess.getPlusOrMinusAccess().getGroup_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getPlusOrMinusAccess().getGroup_1_0_1()); }
		(rule__PlusOrMinus__Group_1_0_1__0)
		{ after(grammarAccess.getPlusOrMinusAccess().getGroup_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMulOrDivAccess().getGroup_1_0_0()); }
		(rule__MulOrDiv__Group_1_0_0__0)
		{ after(grammarAccess.getMulOrDivAccess().getGroup_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getMulOrDivAccess().getGroup_1_0_1()); }
		(rule__MulOrDiv__Group_1_0_1__0)
		{ after(grammarAccess.getMulOrDivAccess().getGroup_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getGroup_0()); }
		(rule__Primary__Group_0__0)
		{ after(grammarAccess.getPrimaryAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getGroup_1()); }
		(rule__Primary__Group_1__0)
		{ after(grammarAccess.getPrimaryAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getGroup_2()); }
		(rule__Primary__Group_2__0)
		{ after(grammarAccess.getPrimaryAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getGroup_3()); }
		(rule__Primary__Group_3__0)
		{ after(grammarAccess.getPrimaryAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getAtomicParserRuleCall_4()); }
		ruleAtomic
		{ after(grammarAccess.getPrimaryAccess().getAtomicParserRuleCall_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getGroup_0()); }
		(rule__Atomic__Group_0__0)
		{ after(grammarAccess.getAtomicAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicAccess().getGroup_1()); }
		(rule__Atomic__Group_1__0)
		{ after(grammarAccess.getAtomicAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicAccess().getGroup_2()); }
		(rule__Atomic__Group_2__0)
		{ after(grammarAccess.getAtomicAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicAccess().getGroup_3()); }
		(rule__Atomic__Group_3__0)
		{ after(grammarAccess.getAtomicAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicAccess().getSemanticDomainAccessParserRuleCall_4()); }
		ruleSemanticDomainAccess
		{ after(grammarAccess.getAtomicAccess().getSemanticDomainAccessParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicAccess().getTerminalAccessExpressionParserRuleCall_5()); }
		ruleTerminalAccessExpression
		{ after(grammarAccess.getAtomicAccess().getTerminalAccessExpressionParserRuleCall_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EString__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
		RULE_ID
		{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdaptiveSemantics__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdaptiveSemantics__Group__0__Impl
	rule__AdaptiveSemantics__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdaptiveSemantics__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdaptiveSemanticsAccess().getModelAssignment_0()); }
	(rule__AdaptiveSemantics__ModelAssignment_0)
	{ after(grammarAccess.getAdaptiveSemanticsAccess().getModelAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdaptiveSemantics__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdaptiveSemantics__Group__1__Impl
	rule__AdaptiveSemantics__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AdaptiveSemantics__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdaptiveSemanticsAccess().getImportsAssignment_1()); }
	(rule__AdaptiveSemantics__ImportsAssignment_1)*
	{ after(grammarAccess.getAdaptiveSemanticsAccess().getImportsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdaptiveSemantics__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdaptiveSemantics__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdaptiveSemantics__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdaptiveSemanticsAccess().getRulesAssignment_2()); }
	(rule__AdaptiveSemantics__RulesAssignment_2)*
	{ after(grammarAccess.getAdaptiveSemanticsAccess().getRulesAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getModelKeyword_0()); }
	'model'
	{ after(grammarAccess.getModelAccess().getModelKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__1__Impl
	rule__Model__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getImportURIAssignment_1()); }
	(rule__Model__ImportURIAssignment_1)
	{ after(grammarAccess.getModelAccess().getImportURIAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__2__Impl
	rule__Model__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getWithKeyword_2()); }
	'with'
	{ after(grammarAccess.getModelAccess().getWithKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getSemanticdomainAssignment_3()); }
	(rule__Model__SemanticdomainAssignment_3)
	{ after(grammarAccess.getModelAccess().getSemanticdomainAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__0__Impl
	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getImportKeyword_0()); }
	'import'
	{ after(grammarAccess.getImportAccess().getImportKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__1__Impl
	rule__Import__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getImportURIAssignment_1()); }
	(rule__Import__ImportURIAssignment_1)
	{ after(grammarAccess.getImportAccess().getImportURIAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__2__Impl
	rule__Import__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getAsKeyword_2()); }
	'as'
	{ after(grammarAccess.getImportAccess().getAsKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getNameAssignment_3()); }
	(rule__Import__NameAssignment_3)
	{ after(grammarAccess.getImportAccess().getNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__0__Impl
	rule__Rule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getRuleKeyword_0()); }
	'rule'
	{ after(grammarAccess.getRuleAccess().getRuleKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__1__Impl
	rule__Rule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getNameAssignment_1()); }
	(rule__Rule__NameAssignment_1)
	{ after(grammarAccess.getRuleAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__2__Impl
	rule__Rule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getCommaKeyword_2()); }
	','
	{ after(grammarAccess.getRuleAccess().getCommaKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__3__Impl
	rule__Rule__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getConclusionAssignment_3()); }
	(rule__Rule__ConclusionAssignment_3)
	{ after(grammarAccess.getRuleAccess().getConclusionAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__4__Impl
	rule__Rule__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getGroup_4()); }
	(rule__Rule__Group_4__0)?
	{ after(grammarAccess.getRuleAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__5__Impl
	rule__Rule__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getGroup_5()); }
	(rule__Rule__Group_5__0)?
	{ after(grammarAccess.getRuleAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__6__Impl
	rule__Rule__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getGroup_6()); }
	(rule__Rule__Group_6__0)?
	{ after(grammarAccess.getRuleAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getGroup_7()); }
	(rule__Rule__Group_7__0)?
	{ after(grammarAccess.getRuleAccess().getGroup_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group_4__0__Impl
	rule__Rule__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getWhereKeyword_4_0()); }
	'where'
	{ after(grammarAccess.getRuleAccess().getWhereKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group_4__1__Impl
	rule__Rule__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getConditionsAssignment_4_1()); }
	(rule__Rule__ConditionsAssignment_4_1)
	{ after(grammarAccess.getRuleAccess().getConditionsAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getGroup_4_2()); }
	(rule__Rule__Group_4_2__0)*
	{ after(grammarAccess.getRuleAccess().getGroup_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group_4_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group_4_2__0__Impl
	rule__Rule__Group_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_4_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getSemicolonKeyword_4_2_0()); }
	';'
	{ after(grammarAccess.getRuleAccess().getSemicolonKeyword_4_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_4_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_4_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getConditionsAssignment_4_2_1()); }
	(rule__Rule__ConditionsAssignment_4_2_1)
	{ after(grammarAccess.getRuleAccess().getConditionsAssignment_4_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group_5__0__Impl
	rule__Rule__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getResolveKeyword_5_0()); }
	'resolve'
	{ after(grammarAccess.getRuleAccess().getResolveKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group_5__1__Impl
	rule__Rule__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getPremisesAssignment_5_1()); }
	(rule__Rule__PremisesAssignment_5_1)
	{ after(grammarAccess.getRuleAccess().getPremisesAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getGroup_5_2()); }
	(rule__Rule__Group_5_2__0)*
	{ after(grammarAccess.getRuleAccess().getGroup_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group_5_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group_5_2__0__Impl
	rule__Rule__Group_5_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_5_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getSemicolonKeyword_5_2_0()); }
	';'
	{ after(grammarAccess.getRuleAccess().getSemicolonKeyword_5_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_5_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group_5_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_5_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getPremisesAssignment_5_2_1()); }
	(rule__Rule__PremisesAssignment_5_2_1)
	{ after(grammarAccess.getRuleAccess().getPremisesAssignment_5_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group_6__0__Impl
	rule__Rule__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getBindKeyword_6_0()); }
	'bind'
	{ after(grammarAccess.getRuleAccess().getBindKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group_6__1__Impl
	rule__Rule__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getBindingsAssignment_6_1()); }
	(rule__Rule__BindingsAssignment_6_1)
	{ after(grammarAccess.getRuleAccess().getBindingsAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_6__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group_6__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_6__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getGroup_6_2()); }
	(rule__Rule__Group_6_2__0)*
	{ after(grammarAccess.getRuleAccess().getGroup_6_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group_6_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group_6_2__0__Impl
	rule__Rule__Group_6_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_6_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getSemicolonKeyword_6_2_0()); }
	';'
	{ after(grammarAccess.getRuleAccess().getSemicolonKeyword_6_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_6_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group_6_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_6_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getBindingsAssignment_6_2_1()); }
	(rule__Rule__BindingsAssignment_6_2_1)
	{ after(grammarAccess.getRuleAccess().getBindingsAssignment_6_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group_7__0__Impl
	rule__Rule__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getIOKeyword_7_0()); }
	'IO'
	{ after(grammarAccess.getRuleAccess().getIOKeyword_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group_7__1__Impl
	rule__Rule__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getAlternatives_7_1()); }
	(rule__Rule__Alternatives_7_1)
	{ after(grammarAccess.getRuleAccess().getAlternatives_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_7__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group_7__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_7__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getGroup_7_2()); }
	(rule__Rule__Group_7_2__0)*
	{ after(grammarAccess.getRuleAccess().getGroup_7_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group_7_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group_7_2__0__Impl
	rule__Rule__Group_7_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_7_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getSemicolonKeyword_7_2_0()); }
	';'
	{ after(grammarAccess.getRuleAccess().getSemicolonKeyword_7_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_7_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group_7_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_7_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getAlternatives_7_2_1()); }
	(rule__Rule__Alternatives_7_2_1)
	{ after(grammarAccess.getRuleAccess().getAlternatives_7_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Condition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group__0__Impl
	rule__Condition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getConditionAction_0()); }
	()
	{ after(grammarAccess.getConditionAccess().getConditionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getCondAssignment_1()); }
	(rule__Condition__CondAssignment_1)
	{ after(grammarAccess.getConditionAccess().getCondAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Input__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Input__Group__0__Impl
	rule__Input__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputAccess().getAssigneeAssignment_0()); }
	(rule__Input__AssigneeAssignment_0)
	{ after(grammarAccess.getInputAccess().getAssigneeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Input__Group__1__Impl
	rule__Input__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getInputAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Input__Group__2__Impl
	rule__Input__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputAccess().getOperationAssignment_2()); }
	(rule__Input__OperationAssignment_2)
	{ after(grammarAccess.getInputAccess().getOperationAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Input__Group__3__Impl
	rule__Input__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputAccess().getLeftParenthesisKeyword_3()); }
	'('
	{ after(grammarAccess.getInputAccess().getLeftParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Input__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getInputAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Output__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Output__Group__0__Impl
	rule__Output__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputAccess().getOperationAssignment_0()); }
	(rule__Output__OperationAssignment_0)
	{ after(grammarAccess.getOutputAccess().getOperationAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Output__Group__1__Impl
	rule__Output__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getOutputAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Output__Group__2__Impl
	rule__Output__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputAccess().getGroup_2()); }
	(rule__Output__Group_2__0)?
	{ after(grammarAccess.getOutputAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Output__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getOutputAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Output__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Output__Group_2__0__Impl
	rule__Output__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputAccess().getArgsAssignment_2_0()); }
	(rule__Output__ArgsAssignment_2_0)
	{ after(grammarAccess.getOutputAccess().getArgsAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Output__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputAccess().getGroup_2_1()); }
	(rule__Output__Group_2_1__0)*
	{ after(grammarAccess.getOutputAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Output__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Output__Group_2_1__0__Impl
	rule__Output__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputAccess().getCommaKeyword_2_1_0()); }
	','
	{ after(grammarAccess.getOutputAccess().getCommaKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Output__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputAccess().getArgsAssignment_2_1_1()); }
	(rule__Output__ArgsAssignment_2_1_1)
	{ after(grammarAccess.getOutputAccess().getArgsAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Binding__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Binding__Group__0__Impl
	rule__Binding__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Binding__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBindingAccess().getAssigneeAssignment_0()); }
	(rule__Binding__AssigneeAssignment_0)
	{ after(grammarAccess.getBindingAccess().getAssigneeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Binding__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Binding__Group__1__Impl
	rule__Binding__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Binding__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBindingAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getBindingAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Binding__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Binding__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Binding__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBindingAccess().getExprAssignment_2()); }
	(rule__Binding__ExprAssignment_2)
	{ after(grammarAccess.getBindingAccess().getExprAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SemanticDomainAccess__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SemanticDomainAccess__Group__0__Impl
	rule__SemanticDomainAccess__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SemanticDomainAccess__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSemanticDomainAccessAccess().getRecieverAssignment_0()); }
	(rule__SemanticDomainAccess__RecieverAssignment_0)
	{ after(grammarAccess.getSemanticDomainAccessAccess().getRecieverAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SemanticDomainAccess__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SemanticDomainAccess__Group__1__Impl
	rule__SemanticDomainAccess__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SemanticDomainAccess__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSemanticDomainAccessAccess().getFullStopKeyword_1()); }
	'.'
	{ after(grammarAccess.getSemanticDomainAccessAccess().getFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SemanticDomainAccess__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SemanticDomainAccess__Group__2__Impl
	rule__SemanticDomainAccess__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SemanticDomainAccess__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSemanticDomainAccessAccess().getFieldAssignment_2()); }
	(rule__SemanticDomainAccess__FieldAssignment_2)
	{ after(grammarAccess.getSemanticDomainAccessAccess().getFieldAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SemanticDomainAccess__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SemanticDomainAccess__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SemanticDomainAccess__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSemanticDomainAccessAccess().getGroup_3()); }
	(rule__SemanticDomainAccess__Group_3__0)*
	{ after(grammarAccess.getSemanticDomainAccessAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SemanticDomainAccess__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SemanticDomainAccess__Group_3__0__Impl
	rule__SemanticDomainAccess__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SemanticDomainAccess__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSemanticDomainAccessAccess().getSemanticDomainAccessRecieverAction_3_0()); }
	()
	{ after(grammarAccess.getSemanticDomainAccessAccess().getSemanticDomainAccessRecieverAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SemanticDomainAccess__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SemanticDomainAccess__Group_3__1__Impl
	rule__SemanticDomainAccess__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SemanticDomainAccess__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSemanticDomainAccessAccess().getFullStopKeyword_3_1()); }
	'.'
	{ after(grammarAccess.getSemanticDomainAccessAccess().getFullStopKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SemanticDomainAccess__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SemanticDomainAccess__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SemanticDomainAccess__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSemanticDomainAccessAccess().getFieldAssignment_3_2()); }
	(rule__SemanticDomainAccess__FieldAssignment_3_2)
	{ after(grammarAccess.getSemanticDomainAccessAccess().getFieldAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Self__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Self__Group__0__Impl
	rule__Self__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Self__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelfAccess().getSelfAction_0()); }
	()
	{ after(grammarAccess.getSelfAccess().getSelfAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Self__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Self__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Self__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelfAccess().getSelfKeyword_1()); }
	'self'
	{ after(grammarAccess.getSelfAccess().getSelfKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Conclusion__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conclusion__Group__0__Impl
	rule__Conclusion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Conclusion__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConclusionAccess().getFromAssignment_0()); }
	(rule__Conclusion__FromAssignment_0)
	{ after(grammarAccess.getConclusionAccess().getFromAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conclusion__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conclusion__Group__1__Impl
	rule__Conclusion__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Conclusion__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConclusionAccess().getHyphenMinusGreaterThanSignKeyword_1()); }
	'->'
	{ after(grammarAccess.getConclusionAccess().getHyphenMinusGreaterThanSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conclusion__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conclusion__Group__2__Impl
	rule__Conclusion__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Conclusion__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConclusionAccess().getTerminationAssignment_2()); }
	(rule__Conclusion__TerminationAssignment_2)?
	{ after(grammarAccess.getConclusionAccess().getTerminationAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conclusion__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conclusion__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Conclusion__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConclusionAccess().getToAssignment_3()); }
	(rule__Conclusion__ToAssignment_3)
	{ after(grammarAccess.getConclusionAccess().getToAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Premise__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Premise__Group__0__Impl
	rule__Premise__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Premise__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPremiseAccess().getFromAssignment_0()); }
	(rule__Premise__FromAssignment_0)
	{ after(grammarAccess.getPremiseAccess().getFromAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Premise__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Premise__Group__1__Impl
	rule__Premise__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Premise__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPremiseAccess().getHyphenMinusGreaterThanSignKeyword_1()); }
	'->'
	{ after(grammarAccess.getPremiseAccess().getHyphenMinusGreaterThanSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Premise__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Premise__Group__2__Impl
	rule__Premise__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Premise__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPremiseAccess().getTerminationAssignment_2()); }
	(rule__Premise__TerminationAssignment_2)?
	{ after(grammarAccess.getPremiseAccess().getTerminationAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Premise__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Premise__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Premise__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPremiseAccess().getToAssignment_3()); }
	(rule__Premise__ToAssignment_3)
	{ after(grammarAccess.getPremiseAccess().getToAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DefConfiguration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefConfiguration__Group__0__Impl
	rule__DefConfiguration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefConfiguration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefConfigurationAccess().getConceptAssignment_0()); }
	(rule__DefConfiguration__ConceptAssignment_0)
	{ after(grammarAccess.getDefConfigurationAccess().getConceptAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefConfiguration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefConfiguration__Group__1__Impl
	rule__DefConfiguration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DefConfiguration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefConfigurationAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getDefConfigurationAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefConfiguration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefConfiguration__Group__2__Impl
	rule__DefConfiguration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DefConfiguration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefConfigurationAccess().getGroup_2()); }
	(rule__DefConfiguration__Group_2__0)?
	{ after(grammarAccess.getDefConfigurationAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefConfiguration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefConfiguration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefConfiguration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefConfigurationAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getDefConfigurationAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DefConfiguration__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefConfiguration__Group_2__0__Impl
	rule__DefConfiguration__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefConfiguration__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefConfigurationAccess().getChildsAssignment_2_0()); }
	(rule__DefConfiguration__ChildsAssignment_2_0)
	{ after(grammarAccess.getDefConfigurationAccess().getChildsAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefConfiguration__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefConfiguration__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefConfiguration__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefConfigurationAccess().getGroup_2_1()); }
	(rule__DefConfiguration__Group_2_1__0)*
	{ after(grammarAccess.getDefConfigurationAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DefConfiguration__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefConfiguration__Group_2_1__0__Impl
	rule__DefConfiguration__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefConfiguration__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefConfigurationAccess().getCommaKeyword_2_1_0()); }
	','
	{ after(grammarAccess.getDefConfigurationAccess().getCommaKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefConfiguration__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefConfiguration__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefConfiguration__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefConfigurationAccess().getChildsAssignment_2_1_1()); }
	(rule__DefConfiguration__ChildsAssignment_2_1_1)
	{ after(grammarAccess.getDefConfigurationAccess().getChildsAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RefConfiguration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RefConfiguration__Group__0__Impl
	rule__RefConfiguration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RefConfiguration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRefConfigurationAccess().getConceptAssignment_0()); }
	(rule__RefConfiguration__ConceptAssignment_0)
	{ after(grammarAccess.getRefConfigurationAccess().getConceptAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RefConfiguration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RefConfiguration__Group__1__Impl
	rule__RefConfiguration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RefConfiguration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRefConfigurationAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getRefConfigurationAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RefConfiguration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RefConfiguration__Group__2__Impl
	rule__RefConfiguration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RefConfiguration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRefConfigurationAccess().getGroup_2()); }
	(rule__RefConfiguration__Group_2__0)?
	{ after(grammarAccess.getRefConfigurationAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RefConfiguration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RefConfiguration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RefConfiguration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRefConfigurationAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getRefConfigurationAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RefConfiguration__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RefConfiguration__Group_2__0__Impl
	rule__RefConfiguration__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RefConfiguration__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRefConfigurationAccess().getChildsAssignment_2_0()); }
	(rule__RefConfiguration__ChildsAssignment_2_0)
	{ after(grammarAccess.getRefConfigurationAccess().getChildsAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RefConfiguration__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RefConfiguration__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RefConfiguration__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRefConfigurationAccess().getGroup_2_1()); }
	(rule__RefConfiguration__Group_2_1__0)*
	{ after(grammarAccess.getRefConfigurationAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RefConfiguration__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RefConfiguration__Group_2_1__0__Impl
	rule__RefConfiguration__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RefConfiguration__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRefConfigurationAccess().getCommaKeyword_2_1_0()); }
	','
	{ after(grammarAccess.getRefConfigurationAccess().getCommaKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RefConfiguration__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RefConfiguration__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RefConfiguration__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRefConfigurationAccess().getChildsAssignment_2_1_1()); }
	(rule__RefConfiguration__ChildsAssignment_2_1_1)
	{ after(grammarAccess.getRefConfigurationAccess().getChildsAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SymbolDef__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SymbolDef__Group__0__Impl
	rule__SymbolDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolDef__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSymbolDefAccess().getSymbolDefAction_0()); }
	()
	{ after(grammarAccess.getSymbolDefAccess().getSymbolDefAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolDef__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SymbolDef__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolDef__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSymbolDefAccess().getNameAssignment_1()); }
	(rule__SymbolDef__NameAssignment_1)
	{ after(grammarAccess.getSymbolDefAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SymbolRef__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SymbolRef__Group__0__Impl
	rule__SymbolRef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolRef__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSymbolRefAccess().getSymbolRefAction_0()); }
	()
	{ after(grammarAccess.getSymbolRefAccess().getSymbolRefAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolRef__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SymbolRef__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolRef__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSymbolRefAccess().getDefAssignment_1()); }
	(rule__SymbolRef__DefAssignment_1)
	{ after(grammarAccess.getSymbolRefAccess().getDefAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ListDef__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListDef__Group__0__Impl
	rule__ListDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListDef__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListDefAccess().getLeftSquareBracketKeyword_0()); }
	'['
	{ after(grammarAccess.getListDefAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListDef__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListDef__Group__1__Impl
	rule__ListDef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ListDef__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListDefAccess().getHeadAssignment_1()); }
	(rule__ListDef__HeadAssignment_1)
	{ after(grammarAccess.getListDefAccess().getHeadAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListDef__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListDef__Group__2__Impl
	rule__ListDef__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ListDef__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListDefAccess().getVerticalLineKeyword_2()); }
	'|'
	{ after(grammarAccess.getListDefAccess().getVerticalLineKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListDef__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListDef__Group__3__Impl
	rule__ListDef__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ListDef__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListDefAccess().getTailAssignment_3()); }
	(rule__ListDef__TailAssignment_3)
	{ after(grammarAccess.getListDefAccess().getTailAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListDef__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListDef__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListDef__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListDefAccess().getRightSquareBracketKeyword_4()); }
	']'
	{ after(grammarAccess.getListDefAccess().getRightSquareBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ListRef__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListRef__Group__0__Impl
	rule__ListRef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListRef__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListRefAccess().getLeftSquareBracketKeyword_0()); }
	'['
	{ after(grammarAccess.getListRefAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListRef__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListRef__Group__1__Impl
	rule__ListRef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ListRef__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListRefAccess().getHeadAssignment_1()); }
	(rule__ListRef__HeadAssignment_1)
	{ after(grammarAccess.getListRefAccess().getHeadAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListRef__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListRef__Group__2__Impl
	rule__ListRef__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ListRef__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListRefAccess().getVerticalLineKeyword_2()); }
	'|'
	{ after(grammarAccess.getListRefAccess().getVerticalLineKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListRef__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListRef__Group__3__Impl
	rule__ListRef__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ListRef__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListRefAccess().getTailAssignment_3()); }
	(rule__ListRef__TailAssignment_3)
	{ after(grammarAccess.getListRefAccess().getTailAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListRef__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListRef__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListRef__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListRefAccess().getRightSquareBracketKeyword_4()); }
	']'
	{ after(grammarAccess.getListRefAccess().getRightSquareBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VoidList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VoidList__Group__0__Impl
	rule__VoidList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVoidListAccess().getVoidListAction_0()); }
	()
	{ after(grammarAccess.getVoidListAccess().getVoidListAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VoidList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVoidListAccess().getLeftSquareBracketRightSquareBracketKeyword_1()); }
	'[]'
	{ after(grammarAccess.getVoidListAccess().getLeftSquareBracketRightSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CondNot__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CondNot__Group__0__Impl
	rule__CondNot__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CondNot__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCondNotAccess().getNotAction_0()); }
	()
	{ after(grammarAccess.getCondNotAccess().getNotAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CondNot__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CondNot__Group__1__Impl
	rule__CondNot__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CondNot__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCondNotAccess().getExclamationMarkKeyword_1()); }
	'!'
	{ after(grammarAccess.getCondNotAccess().getExclamationMarkKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CondNot__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CondNot__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CondNot__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCondNotAccess().getExprAssignment_2()); }
	(rule__CondNot__ExprAssignment_2)
	{ after(grammarAccess.getCondNotAccess().getExprAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CondOr__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CondOr__Group__0__Impl
	rule__CondOr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CondOr__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCondOrAccess().getOrAction_0()); }
	()
	{ after(grammarAccess.getCondOrAccess().getOrAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CondOr__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CondOr__Group__1__Impl
	rule__CondOr__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CondOr__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCondOrAccess().getLhsAssignment_1()); }
	(rule__CondOr__LhsAssignment_1)
	{ after(grammarAccess.getCondOrAccess().getLhsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CondOr__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CondOr__Group__2__Impl
	rule__CondOr__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CondOr__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCondOrAccess().getVerticalLineVerticalLineKeyword_2()); }
	'||'
	{ after(grammarAccess.getCondOrAccess().getVerticalLineVerticalLineKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CondOr__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CondOr__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CondOr__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCondOrAccess().getRhsAssignment_3()); }
	(rule__CondOr__RhsAssignment_3)
	{ after(grammarAccess.getCondOrAccess().getRhsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CondAnd__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CondAnd__Group__0__Impl
	rule__CondAnd__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CondAnd__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCondAndAccess().getAndAction_0()); }
	()
	{ after(grammarAccess.getCondAndAccess().getAndAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CondAnd__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CondAnd__Group__1__Impl
	rule__CondAnd__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CondAnd__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCondAndAccess().getLhsAssignment_1()); }
	(rule__CondAnd__LhsAssignment_1)
	{ after(grammarAccess.getCondAndAccess().getLhsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CondAnd__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CondAnd__Group__2__Impl
	rule__CondAnd__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CondAnd__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCondAndAccess().getAmpersandAmpersandKeyword_2()); }
	'&&'
	{ after(grammarAccess.getCondAndAccess().getAmpersandAmpersandKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CondAnd__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CondAnd__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CondAnd__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCondAndAccess().getRhsAssignment_3()); }
	(rule__CondAnd__RhsAssignment_3)
	{ after(grammarAccess.getCondAndAccess().getRhsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CondEquality__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CondEquality__Group_0__0__Impl
	rule__CondEquality__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CondEquality__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCondEqualityAccess().getEqualAction_0_0()); }
	()
	{ after(grammarAccess.getCondEqualityAccess().getEqualAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CondEquality__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CondEquality__Group_0__1__Impl
	rule__CondEquality__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CondEquality__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCondEqualityAccess().getLhsAssignment_0_1()); }
	(rule__CondEquality__LhsAssignment_0_1)
	{ after(grammarAccess.getCondEqualityAccess().getLhsAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CondEquality__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CondEquality__Group_0__2__Impl
	rule__CondEquality__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CondEquality__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCondEqualityAccess().getEqualsSignEqualsSignKeyword_0_2()); }
	'=='
	{ after(grammarAccess.getCondEqualityAccess().getEqualsSignEqualsSignKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CondEquality__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CondEquality__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CondEquality__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCondEqualityAccess().getRhsAssignment_0_3()); }
	(rule__CondEquality__RhsAssignment_0_3)
	{ after(grammarAccess.getCondEqualityAccess().getRhsAssignment_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CondEquality__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CondEquality__Group_1__0__Impl
	rule__CondEquality__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CondEquality__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCondEqualityAccess().getNotEqualAction_1_0()); }
	()
	{ after(grammarAccess.getCondEqualityAccess().getNotEqualAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CondEquality__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CondEquality__Group_1__1__Impl
	rule__CondEquality__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CondEquality__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCondEqualityAccess().getLhsAssignment_1_1()); }
	(rule__CondEquality__LhsAssignment_1_1)
	{ after(grammarAccess.getCondEqualityAccess().getLhsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CondEquality__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CondEquality__Group_1__2__Impl
	rule__CondEquality__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CondEquality__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCondEqualityAccess().getExclamationMarkEqualsSignKeyword_1_2()); }
	'!='
	{ after(grammarAccess.getCondEqualityAccess().getExclamationMarkEqualsSignKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CondEquality__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CondEquality__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CondEquality__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCondEqualityAccess().getRhsAssignment_1_3()); }
	(rule__CondEquality__RhsAssignment_1_3)
	{ after(grammarAccess.getCondEqualityAccess().getRhsAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CondComparison__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CondComparison__Group_0__0__Impl
	rule__CondComparison__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CondComparison__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCondComparisonAccess().getLessAction_0_0()); }
	()
	{ after(grammarAccess.getCondComparisonAccess().getLessAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CondComparison__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CondComparison__Group_0__1__Impl
	rule__CondComparison__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CondComparison__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCondComparisonAccess().getLhsAssignment_0_1()); }
	(rule__CondComparison__LhsAssignment_0_1)
	{ after(grammarAccess.getCondComparisonAccess().getLhsAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CondComparison__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CondComparison__Group_0__2__Impl
	rule__CondComparison__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CondComparison__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCondComparisonAccess().getLessThanSignKeyword_0_2()); }
	'<'
	{ after(grammarAccess.getCondComparisonAccess().getLessThanSignKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CondComparison__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CondComparison__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CondComparison__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCondComparisonAccess().getRhsAssignment_0_3()); }
	(rule__CondComparison__RhsAssignment_0_3)
	{ after(grammarAccess.getCondComparisonAccess().getRhsAssignment_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CondComparison__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CondComparison__Group_1__0__Impl
	rule__CondComparison__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CondComparison__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCondComparisonAccess().getLessEqAction_1_0()); }
	()
	{ after(grammarAccess.getCondComparisonAccess().getLessEqAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CondComparison__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CondComparison__Group_1__1__Impl
	rule__CondComparison__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CondComparison__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCondComparisonAccess().getLhsAssignment_1_1()); }
	(rule__CondComparison__LhsAssignment_1_1)
	{ after(grammarAccess.getCondComparisonAccess().getLhsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CondComparison__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CondComparison__Group_1__2__Impl
	rule__CondComparison__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CondComparison__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCondComparisonAccess().getLessThanSignEqualsSignKeyword_1_2()); }
	'<='
	{ after(grammarAccess.getCondComparisonAccess().getLessThanSignEqualsSignKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CondComparison__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CondComparison__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CondComparison__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCondComparisonAccess().getRhsAssignment_1_3()); }
	(rule__CondComparison__RhsAssignment_1_3)
	{ after(grammarAccess.getCondComparisonAccess().getRhsAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CondIs__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CondIs__Group__0__Impl
	rule__CondIs__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CondIs__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCondIsAccess().getIsAction_0()); }
	()
	{ after(grammarAccess.getCondIsAccess().getIsAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CondIs__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CondIs__Group__1__Impl
	rule__CondIs__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CondIs__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCondIsAccess().getPatternAssignment_1()); }
	(rule__CondIs__PatternAssignment_1)
	{ after(grammarAccess.getCondIsAccess().getPatternAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CondIs__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CondIs__Group__2__Impl
	rule__CondIs__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CondIs__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCondIsAccess().getMatchKeyword_2()); }
	'match'
	{ after(grammarAccess.getCondIsAccess().getMatchKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CondIs__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CondIs__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CondIs__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCondIsAccess().getExprAssignment_3()); }
	(rule__CondIs__ExprAssignment_3)
	{ after(grammarAccess.getCondIsAccess().getExprAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Or__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group__0__Impl
	rule__Or__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getAndParserRuleCall_0()); }
	ruleAnd
	{ after(grammarAccess.getOrAccess().getAndParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getGroup_1()); }
	(rule__Or__Group_1__0)*
	{ after(grammarAccess.getOrAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Or__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group_1__0__Impl
	rule__Or__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getOrLhsAction_1_0()); }
	()
	{ after(grammarAccess.getOrAccess().getOrLhsAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group_1__1__Impl
	rule__Or__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getVerticalLineVerticalLineKeyword_1_1()); }
	'||'
	{ after(grammarAccess.getOrAccess().getVerticalLineVerticalLineKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Or__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrAccess().getRhsAssignment_1_2()); }
	(rule__Or__RhsAssignment_1_2)
	{ after(grammarAccess.getOrAccess().getRhsAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__And__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group__0__Impl
	rule__And__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getEqualityParserRuleCall_0()); }
	ruleEquality
	{ after(grammarAccess.getAndAccess().getEqualityParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getGroup_1()); }
	(rule__And__Group_1__0)*
	{ after(grammarAccess.getAndAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__And__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group_1__0__Impl
	rule__And__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getAndLhsAction_1_0()); }
	()
	{ after(grammarAccess.getAndAccess().getAndLhsAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group_1__1__Impl
	rule__And__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getAmpersandAmpersandKeyword_1_1()); }
	'&&'
	{ after(grammarAccess.getAndAccess().getAmpersandAmpersandKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__And__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndAccess().getRhsAssignment_1_2()); }
	(rule__And__RhsAssignment_1_2)
	{ after(grammarAccess.getAndAccess().getRhsAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Equality__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equality__Group__0__Impl
	rule__Equality__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityAccess().getComparisonParserRuleCall_0()); }
	ruleComparison
	{ after(grammarAccess.getEqualityAccess().getComparisonParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equality__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityAccess().getGroup_1()); }
	(rule__Equality__Group_1__0)*
	{ after(grammarAccess.getEqualityAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Equality__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equality__Group_1__0__Impl
	rule__Equality__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityAccess().getAlternatives_1_0()); }
	(rule__Equality__Alternatives_1_0)
	{ after(grammarAccess.getEqualityAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equality__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityAccess().getRhsAssignment_1_1()); }
	(rule__Equality__RhsAssignment_1_1)
	{ after(grammarAccess.getEqualityAccess().getRhsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Equality__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equality__Group_1_0_0__0__Impl
	rule__Equality__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityAccess().getEqualLhsAction_1_0_0_0()); }
	()
	{ after(grammarAccess.getEqualityAccess().getEqualLhsAction_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equality__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityAccess().getEqualsSignEqualsSignKeyword_1_0_0_1()); }
	'=='
	{ after(grammarAccess.getEqualityAccess().getEqualsSignEqualsSignKeyword_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Equality__Group_1_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equality__Group_1_0_1__0__Impl
	rule__Equality__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group_1_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityAccess().getNotEqualLhsAction_1_0_1_0()); }
	()
	{ after(grammarAccess.getEqualityAccess().getNotEqualLhsAction_1_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group_1_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equality__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__Group_1_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityAccess().getExclamationMarkEqualsSignKeyword_1_0_1_1()); }
	'!='
	{ after(grammarAccess.getEqualityAccess().getExclamationMarkEqualsSignKeyword_1_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Comparison__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group__0__Impl
	rule__Comparison__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getPlusOrMinusParserRuleCall_0()); }
	rulePlusOrMinus
	{ after(grammarAccess.getComparisonAccess().getPlusOrMinusParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getGroup_1()); }
	(rule__Comparison__Group_1__0)*
	{ after(grammarAccess.getComparisonAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Comparison__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group_1__0__Impl
	rule__Comparison__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getAlternatives_1_0()); }
	(rule__Comparison__Alternatives_1_0)
	{ after(grammarAccess.getComparisonAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getRhsAssignment_1_1()); }
	(rule__Comparison__RhsAssignment_1_1)
	{ after(grammarAccess.getComparisonAccess().getRhsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Comparison__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group_1_0_0__0__Impl
	rule__Comparison__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getLessLhsAction_1_0_0_0()); }
	()
	{ after(grammarAccess.getComparisonAccess().getLessLhsAction_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getLessThanSignKeyword_1_0_0_1()); }
	'<'
	{ after(grammarAccess.getComparisonAccess().getLessThanSignKeyword_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Comparison__Group_1_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group_1_0_1__0__Impl
	rule__Comparison__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getLessEqLhsAction_1_0_1_0()); }
	()
	{ after(grammarAccess.getComparisonAccess().getLessEqLhsAction_1_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comparison__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_1_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComparisonAccess().getLessThanSignEqualsSignKeyword_1_0_1_1()); }
	'<='
	{ after(grammarAccess.getComparisonAccess().getLessThanSignEqualsSignKeyword_1_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PlusOrMinus__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinus__Group__0__Impl
	rule__PlusOrMinus__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusAccess().getMulOrDivParserRuleCall_0()); }
	ruleMulOrDiv
	{ after(grammarAccess.getPlusOrMinusAccess().getMulOrDivParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinus__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusAccess().getGroup_1()); }
	(rule__PlusOrMinus__Group_1__0)*
	{ after(grammarAccess.getPlusOrMinusAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PlusOrMinus__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinus__Group_1__0__Impl
	rule__PlusOrMinus__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusAccess().getAlternatives_1_0()); }
	(rule__PlusOrMinus__Alternatives_1_0)
	{ after(grammarAccess.getPlusOrMinusAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinus__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusAccess().getRhsAssignment_1_1()); }
	(rule__PlusOrMinus__RhsAssignment_1_1)
	{ after(grammarAccess.getPlusOrMinusAccess().getRhsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PlusOrMinus__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinus__Group_1_0_0__0__Impl
	rule__PlusOrMinus__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusAccess().getPlusLhsAction_1_0_0_0()); }
	()
	{ after(grammarAccess.getPlusOrMinusAccess().getPlusLhsAction_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinus__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusAccess().getPlusSignKeyword_1_0_0_1()); }
	'+'
	{ after(grammarAccess.getPlusOrMinusAccess().getPlusSignKeyword_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PlusOrMinus__Group_1_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinus__Group_1_0_1__0__Impl
	rule__PlusOrMinus__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusAccess().getMinusLhsAction_1_0_1_0()); }
	()
	{ after(grammarAccess.getPlusOrMinusAccess().getMinusLhsAction_1_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinus__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusAccess().getHyphenMinusKeyword_1_0_1_1()); }
	'-'
	{ after(grammarAccess.getPlusOrMinusAccess().getHyphenMinusKeyword_1_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MulOrDiv__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulOrDiv__Group__0__Impl
	rule__MulOrDiv__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulOrDivAccess().getPrimaryParserRuleCall_0()); }
	rulePrimary
	{ after(grammarAccess.getMulOrDivAccess().getPrimaryParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulOrDiv__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulOrDivAccess().getGroup_1()); }
	(rule__MulOrDiv__Group_1__0)*
	{ after(grammarAccess.getMulOrDivAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MulOrDiv__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulOrDiv__Group_1__0__Impl
	rule__MulOrDiv__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulOrDivAccess().getAlternatives_1_0()); }
	(rule__MulOrDiv__Alternatives_1_0)
	{ after(grammarAccess.getMulOrDivAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulOrDiv__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulOrDivAccess().getRhsAssignment_1_1()); }
	(rule__MulOrDiv__RhsAssignment_1_1)
	{ after(grammarAccess.getMulOrDivAccess().getRhsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MulOrDiv__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulOrDiv__Group_1_0_0__0__Impl
	rule__MulOrDiv__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulOrDivAccess().getMultLhsAction_1_0_0_0()); }
	()
	{ after(grammarAccess.getMulOrDivAccess().getMultLhsAction_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulOrDiv__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulOrDivAccess().getAsteriskKeyword_1_0_0_1()); }
	'*'
	{ after(grammarAccess.getMulOrDivAccess().getAsteriskKeyword_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MulOrDiv__Group_1_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulOrDiv__Group_1_0_1__0__Impl
	rule__MulOrDiv__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__Group_1_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulOrDivAccess().getDivLhsAction_1_0_1_0()); }
	()
	{ after(grammarAccess.getMulOrDivAccess().getDivLhsAction_1_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__Group_1_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulOrDiv__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__Group_1_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulOrDivAccess().getSolidusKeyword_1_0_1_1()); }
	'/'
	{ after(grammarAccess.getMulOrDivAccess().getSolidusKeyword_1_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_0__0__Impl
	rule__Primary__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_0_0()); }
	'('
	{ after(grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_0__1__Impl
	rule__Primary__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getExprParserRuleCall_0_1()); }
	ruleExpr
	{ after(grammarAccess.getPrimaryAccess().getExprParserRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_0_2()); }
	')'
	{ after(grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_1__0__Impl
	rule__Primary__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getNotAction_1_0()); }
	()
	{ after(grammarAccess.getPrimaryAccess().getNotAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_1__1__Impl
	rule__Primary__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getExclamationMarkKeyword_1_1()); }
	'!'
	{ after(grammarAccess.getPrimaryAccess().getExclamationMarkKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getExprAssignment_1_2()); }
	(rule__Primary__ExprAssignment_1_2)
	{ after(grammarAccess.getPrimaryAccess().getExprAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_2__0__Impl
	rule__Primary__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getOppositeAction_2_0()); }
	()
	{ after(grammarAccess.getPrimaryAccess().getOppositeAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_2__1__Impl
	rule__Primary__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getHyphenMinusKeyword_2_1()); }
	'-'
	{ after(grammarAccess.getPrimaryAccess().getHyphenMinusKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getExprAssignment_2_2()); }
	(rule__Primary__ExprAssignment_2_2)
	{ after(grammarAccess.getPrimaryAccess().getExprAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primary__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_3__0__Impl
	rule__Primary__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getIsAction_3_0()); }
	()
	{ after(grammarAccess.getPrimaryAccess().getIsAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_3__1__Impl
	rule__Primary__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getPatternAssignment_3_1()); }
	(rule__Primary__PatternAssignment_3_1)
	{ after(grammarAccess.getPrimaryAccess().getPatternAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_3__2__Impl
	rule__Primary__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getMatchKeyword_3_2()); }
	'match'
	{ after(grammarAccess.getPrimaryAccess().getMatchKeyword_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primary__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryAccess().getExprAssignment_3_3()); }
	(rule__Primary__ExprAssignment_3_3)
	{ after(grammarAccess.getPrimaryAccess().getExprAssignment_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_0__0__Impl
	rule__Atomic__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getIntConstantAction_0_0()); }
	()
	{ after(grammarAccess.getAtomicAccess().getIntConstantAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getValueAssignment_0_1()); }
	(rule__Atomic__ValueAssignment_0_1)
	{ after(grammarAccess.getAtomicAccess().getValueAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_1__0__Impl
	rule__Atomic__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getDoubleConstantAction_1_0()); }
	()
	{ after(grammarAccess.getAtomicAccess().getDoubleConstantAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getValueAssignment_1_1()); }
	(rule__Atomic__ValueAssignment_1_1)
	{ after(grammarAccess.getAtomicAccess().getValueAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_2__0__Impl
	rule__Atomic__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getStringConstantAction_2_0()); }
	()
	{ after(grammarAccess.getAtomicAccess().getStringConstantAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getValueAssignment_2_1()); }
	(rule__Atomic__ValueAssignment_2_1)
	{ after(grammarAccess.getAtomicAccess().getValueAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_3__0__Impl
	rule__Atomic__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getBoolConstantAction_3_0()); }
	()
	{ after(grammarAccess.getAtomicAccess().getBoolConstantAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getValueAssignment_3_1()); }
	(rule__Atomic__ValueAssignment_3_1)
	{ after(grammarAccess.getAtomicAccess().getValueAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FQN__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FQN__Group__0__Impl
	rule__FQN__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFQNAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
	{ after(grammarAccess.getFQNAccess().getIDTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FQN__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFQNAccess().getGroup_1()); }
	(rule__FQN__Group_1__0)*
	{ after(grammarAccess.getFQNAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FQN__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FQN__Group_1__0__Impl
	rule__FQN__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFQNAccess().getFullStopKeyword_1_0()); }
	'.'
	{ after(grammarAccess.getFQNAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FQN__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFQNAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
	{ after(grammarAccess.getFQNAccess().getIDTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OperationFQN__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationFQN__Group__0__Impl
	rule__OperationFQN__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationFQN__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationFQNAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
	{ after(grammarAccess.getOperationFQNAccess().getIDTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationFQN__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationFQN__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationFQN__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getOperationFQNAccess().getGroup_1()); }
		(rule__OperationFQN__Group_1__0)
		{ after(grammarAccess.getOperationFQNAccess().getGroup_1()); }
	)
	(
		{ before(grammarAccess.getOperationFQNAccess().getGroup_1()); }
		(rule__OperationFQN__Group_1__0)*
		{ after(grammarAccess.getOperationFQNAccess().getGroup_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OperationFQN__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationFQN__Group_1__0__Impl
	rule__OperationFQN__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationFQN__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationFQNAccess().getFullStopKeyword_1_0()); }
	'.'
	{ after(grammarAccess.getOperationFQNAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationFQN__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OperationFQN__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationFQN__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationFQNAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
	{ after(grammarAccess.getOperationFQNAccess().getIDTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AdaptiveSemantics__ModelAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdaptiveSemanticsAccess().getModelModelParserRuleCall_0_0()); }
		ruleModel
		{ after(grammarAccess.getAdaptiveSemanticsAccess().getModelModelParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdaptiveSemantics__ImportsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdaptiveSemanticsAccess().getImportsImportParserRuleCall_1_0()); }
		ruleImport
		{ after(grammarAccess.getAdaptiveSemanticsAccess().getImportsImportParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdaptiveSemantics__RulesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdaptiveSemanticsAccess().getRulesRuleParserRuleCall_2_0()); }
		ruleRule
		{ after(grammarAccess.getAdaptiveSemanticsAccess().getRulesRuleParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ImportURIAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getImportURIEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getModelAccess().getImportURIEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__SemanticdomainAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getSemanticdomainEPackageCrossReference_3_0()); }
		(
			{ before(grammarAccess.getModelAccess().getSemanticdomainEPackageFQNParserRuleCall_3_0_1()); }
			ruleFQN
			{ after(grammarAccess.getModelAccess().getSemanticdomainEPackageFQNParserRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getModelAccess().getSemanticdomainEPackageCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__ImportURIAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportAccess().getImportURIEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getImportAccess().getImportURIEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__NameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportAccess().getNameIDTerminalRuleCall_3_0()); }
		RULE_ID
		{ after(grammarAccess.getImportAccess().getNameIDTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getRuleAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__ConclusionAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAccess().getConclusionConclusionParserRuleCall_3_0()); }
		ruleConclusion
		{ after(grammarAccess.getRuleAccess().getConclusionConclusionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__ConditionsAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAccess().getConditionsConditionParserRuleCall_4_1_0()); }
		ruleCondition
		{ after(grammarAccess.getRuleAccess().getConditionsConditionParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__ConditionsAssignment_4_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAccess().getConditionsConditionParserRuleCall_4_2_1_0()); }
		ruleCondition
		{ after(grammarAccess.getRuleAccess().getConditionsConditionParserRuleCall_4_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__PremisesAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAccess().getPremisesPremiseParserRuleCall_5_1_0()); }
		rulePremise
		{ after(grammarAccess.getRuleAccess().getPremisesPremiseParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__PremisesAssignment_5_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAccess().getPremisesPremiseParserRuleCall_5_2_1_0()); }
		rulePremise
		{ after(grammarAccess.getRuleAccess().getPremisesPremiseParserRuleCall_5_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__BindingsAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAccess().getBindingsBindingParserRuleCall_6_1_0()); }
		ruleBinding
		{ after(grammarAccess.getRuleAccess().getBindingsBindingParserRuleCall_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__BindingsAssignment_6_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAccess().getBindingsBindingParserRuleCall_6_2_1_0()); }
		ruleBinding
		{ after(grammarAccess.getRuleAccess().getBindingsBindingParserRuleCall_6_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__InputsAssignment_7_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAccess().getInputsInputParserRuleCall_7_1_0_0()); }
		ruleInput
		{ after(grammarAccess.getRuleAccess().getInputsInputParserRuleCall_7_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__OutputsAssignment_7_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAccess().getOutputsOutputParserRuleCall_7_1_1_0()); }
		ruleOutput
		{ after(grammarAccess.getRuleAccess().getOutputsOutputParserRuleCall_7_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__InputsAssignment_7_2_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAccess().getInputsInputParserRuleCall_7_2_1_0_0()); }
		ruleInput
		{ after(grammarAccess.getRuleAccess().getInputsInputParserRuleCall_7_2_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__OutputsAssignment_7_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAccess().getOutputsOutputParserRuleCall_7_2_1_1_0()); }
		ruleOutput
		{ after(grammarAccess.getRuleAccess().getOutputsOutputParserRuleCall_7_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__CondAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getCondCondExprParserRuleCall_1_0()); }
		ruleCondExpr
		{ after(grammarAccess.getConditionAccess().getCondCondExprParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__AssigneeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInputAccess().getAssigneeAssigneeParserRuleCall_0_0()); }
		ruleAssignee
		{ after(grammarAccess.getInputAccess().getAssigneeAssigneeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Input__OperationAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInputAccess().getOperationEOperationCrossReference_2_0()); }
		(
			{ before(grammarAccess.getInputAccess().getOperationEOperationOperationFQNParserRuleCall_2_0_1()); }
			ruleOperationFQN
			{ after(grammarAccess.getInputAccess().getOperationEOperationOperationFQNParserRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getInputAccess().getOperationEOperationCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__OperationAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutputAccess().getOperationEOperationCrossReference_0_0()); }
		(
			{ before(grammarAccess.getOutputAccess().getOperationEOperationOperationFQNParserRuleCall_0_0_1()); }
			ruleOperationFQN
			{ after(grammarAccess.getOutputAccess().getOperationEOperationOperationFQNParserRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getOutputAccess().getOperationEOperationCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__ArgsAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutputAccess().getArgsTermRefParserRuleCall_2_0_0()); }
		ruleTermRef
		{ after(grammarAccess.getOutputAccess().getArgsTermRefParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__ArgsAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutputAccess().getArgsTermRefParserRuleCall_2_1_1_0()); }
		ruleTermRef
		{ after(grammarAccess.getOutputAccess().getArgsTermRefParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Binding__AssigneeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBindingAccess().getAssigneeAssigneeParserRuleCall_0_0()); }
		ruleAssignee
		{ after(grammarAccess.getBindingAccess().getAssigneeAssigneeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Binding__ExprAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBindingAccess().getExprAssignableParserRuleCall_2_0()); }
		ruleAssignable
		{ after(grammarAccess.getBindingAccess().getExprAssignableParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SemanticDomainAccess__RecieverAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSemanticDomainAccessAccess().getRecieverTerminalAccessExpressionParserRuleCall_0_0()); }
		ruleTerminalAccessExpression
		{ after(grammarAccess.getSemanticDomainAccessAccess().getRecieverTerminalAccessExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SemanticDomainAccess__FieldAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSemanticDomainAccessAccess().getFieldIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getSemanticDomainAccessAccess().getFieldIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SemanticDomainAccess__FieldAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSemanticDomainAccessAccess().getFieldIDTerminalRuleCall_3_2_0()); }
		RULE_ID
		{ after(grammarAccess.getSemanticDomainAccessAccess().getFieldIDTerminalRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conclusion__FromAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConclusionAccess().getFromDefConfigurationParserRuleCall_0_0()); }
		ruleDefConfiguration
		{ after(grammarAccess.getConclusionAccess().getFromDefConfigurationParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conclusion__TerminationAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConclusionAccess().getTerminationTerminationKeyword_2_0()); }
		(
			{ before(grammarAccess.getConclusionAccess().getTerminationTerminationKeyword_2_0()); }
			'termination'
			{ after(grammarAccess.getConclusionAccess().getTerminationTerminationKeyword_2_0()); }
		)
		{ after(grammarAccess.getConclusionAccess().getTerminationTerminationKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conclusion__ToAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConclusionAccess().getToSingleTermRefParserRuleCall_3_0()); }
		ruleSingleTermRef
		{ after(grammarAccess.getConclusionAccess().getToSingleTermRefParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Premise__FromAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPremiseAccess().getFromSymbolRefParserRuleCall_0_0()); }
		ruleSymbolRef
		{ after(grammarAccess.getPremiseAccess().getFromSymbolRefParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Premise__TerminationAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPremiseAccess().getTerminationTerminationKeyword_2_0()); }
		(
			{ before(grammarAccess.getPremiseAccess().getTerminationTerminationKeyword_2_0()); }
			'termination'
			{ after(grammarAccess.getPremiseAccess().getTerminationTerminationKeyword_2_0()); }
		)
		{ after(grammarAccess.getPremiseAccess().getTerminationTerminationKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Premise__ToAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPremiseAccess().getToSingleTermDefParserRuleCall_3_0()); }
		ruleSingleTermDef
		{ after(grammarAccess.getPremiseAccess().getToSingleTermDefParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefConfiguration__ConceptAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefConfigurationAccess().getConceptEClassCrossReference_0_0()); }
		(
			{ before(grammarAccess.getDefConfigurationAccess().getConceptEClassFQNParserRuleCall_0_0_1()); }
			ruleFQN
			{ after(grammarAccess.getDefConfigurationAccess().getConceptEClassFQNParserRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getDefConfigurationAccess().getConceptEClassCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefConfiguration__ChildsAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefConfigurationAccess().getChildsTermDefParserRuleCall_2_0_0()); }
		ruleTermDef
		{ after(grammarAccess.getDefConfigurationAccess().getChildsTermDefParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefConfiguration__ChildsAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefConfigurationAccess().getChildsTermDefParserRuleCall_2_1_1_0()); }
		ruleTermDef
		{ after(grammarAccess.getDefConfigurationAccess().getChildsTermDefParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RefConfiguration__ConceptAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRefConfigurationAccess().getConceptEClassCrossReference_0_0()); }
		(
			{ before(grammarAccess.getRefConfigurationAccess().getConceptEClassFQNParserRuleCall_0_0_1()); }
			ruleFQN
			{ after(grammarAccess.getRefConfigurationAccess().getConceptEClassFQNParserRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getRefConfigurationAccess().getConceptEClassCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RefConfiguration__ChildsAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRefConfigurationAccess().getChildsTermRefParserRuleCall_2_0_0()); }
		ruleTermRef
		{ after(grammarAccess.getRefConfigurationAccess().getChildsTermRefParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RefConfiguration__ChildsAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRefConfigurationAccess().getChildsTermRefParserRuleCall_2_1_1_0()); }
		ruleTermRef
		{ after(grammarAccess.getRefConfigurationAccess().getChildsTermRefParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolDef__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSymbolDefAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getSymbolDefAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolRef__DefAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSymbolRefAccess().getDefSymbolDefCrossReference_1_0()); }
		(
			{ before(grammarAccess.getSymbolRefAccess().getDefSymbolDefIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getSymbolRefAccess().getDefSymbolDefIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getSymbolRefAccess().getDefSymbolDefCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListDef__HeadAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListDefAccess().getHeadSingleTermDefParserRuleCall_1_0()); }
		ruleSingleTermDef
		{ after(grammarAccess.getListDefAccess().getHeadSingleTermDefParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListDef__TailAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListDefAccess().getTailSymbolDefParserRuleCall_3_0()); }
		ruleSymbolDef
		{ after(grammarAccess.getListDefAccess().getTailSymbolDefParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListRef__HeadAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListRefAccess().getHeadSymbolRefParserRuleCall_1_0()); }
		ruleSymbolRef
		{ after(grammarAccess.getListRefAccess().getHeadSymbolRefParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListRef__TailAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListRefAccess().getTailSymbolRefParserRuleCall_3_0()); }
		ruleSymbolRef
		{ after(grammarAccess.getListRefAccess().getTailSymbolRefParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CondNot__ExprAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCondNotAccess().getExprExprParserRuleCall_2_0()); }
		ruleExpr
		{ after(grammarAccess.getCondNotAccess().getExprExprParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CondOr__LhsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCondOrAccess().getLhsAndParserRuleCall_1_0()); }
		ruleAnd
		{ after(grammarAccess.getCondOrAccess().getLhsAndParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CondOr__RhsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCondOrAccess().getRhsAndParserRuleCall_3_0()); }
		ruleAnd
		{ after(grammarAccess.getCondOrAccess().getRhsAndParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CondAnd__LhsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCondAndAccess().getLhsEqualityParserRuleCall_1_0()); }
		ruleEquality
		{ after(grammarAccess.getCondAndAccess().getLhsEqualityParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CondAnd__RhsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCondAndAccess().getRhsEqualityParserRuleCall_3_0()); }
		ruleEquality
		{ after(grammarAccess.getCondAndAccess().getRhsEqualityParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CondEquality__LhsAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCondEqualityAccess().getLhsComparisonParserRuleCall_0_1_0()); }
		ruleComparison
		{ after(grammarAccess.getCondEqualityAccess().getLhsComparisonParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CondEquality__RhsAssignment_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCondEqualityAccess().getRhsComparisonParserRuleCall_0_3_0()); }
		ruleComparison
		{ after(grammarAccess.getCondEqualityAccess().getRhsComparisonParserRuleCall_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CondEquality__LhsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCondEqualityAccess().getLhsComparisonParserRuleCall_1_1_0()); }
		ruleComparison
		{ after(grammarAccess.getCondEqualityAccess().getLhsComparisonParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CondEquality__RhsAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCondEqualityAccess().getRhsComparisonParserRuleCall_1_3_0()); }
		ruleComparison
		{ after(grammarAccess.getCondEqualityAccess().getRhsComparisonParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CondComparison__LhsAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCondComparisonAccess().getLhsPlusOrMinusParserRuleCall_0_1_0()); }
		rulePlusOrMinus
		{ after(grammarAccess.getCondComparisonAccess().getLhsPlusOrMinusParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CondComparison__RhsAssignment_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCondComparisonAccess().getRhsPlusOrMinusParserRuleCall_0_3_0()); }
		rulePlusOrMinus
		{ after(grammarAccess.getCondComparisonAccess().getRhsPlusOrMinusParserRuleCall_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CondComparison__LhsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCondComparisonAccess().getLhsPlusOrMinusParserRuleCall_1_1_0()); }
		rulePlusOrMinus
		{ after(grammarAccess.getCondComparisonAccess().getLhsPlusOrMinusParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CondComparison__RhsAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCondComparisonAccess().getRhsPlusOrMinusParserRuleCall_1_3_0()); }
		rulePlusOrMinus
		{ after(grammarAccess.getCondComparisonAccess().getRhsPlusOrMinusParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CondIs__PatternAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCondIsAccess().getPatternDefConfigurationParserRuleCall_1_0()); }
		ruleDefConfiguration
		{ after(grammarAccess.getCondIsAccess().getPatternDefConfigurationParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CondIs__ExprAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCondIsAccess().getExprExprParserRuleCall_3_0()); }
		ruleExpr
		{ after(grammarAccess.getCondIsAccess().getExprExprParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__RhsAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrAccess().getRhsAndParserRuleCall_1_2_0()); }
		ruleAnd
		{ after(grammarAccess.getOrAccess().getRhsAndParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__And__RhsAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndAccess().getRhsEqualityParserRuleCall_1_2_0()); }
		ruleEquality
		{ after(grammarAccess.getAndAccess().getRhsEqualityParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equality__RhsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualityAccess().getRhsComparisonParserRuleCall_1_1_0()); }
		ruleComparison
		{ after(grammarAccess.getEqualityAccess().getRhsComparisonParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__RhsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonAccess().getRhsPlusOrMinusParserRuleCall_1_1_0()); }
		rulePlusOrMinus
		{ after(grammarAccess.getComparisonAccess().getRhsPlusOrMinusParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__RhsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPlusOrMinusAccess().getRhsMulOrDivParserRuleCall_1_1_0()); }
		ruleMulOrDiv
		{ after(grammarAccess.getPlusOrMinusAccess().getRhsMulOrDivParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOrDiv__RhsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMulOrDivAccess().getRhsPrimaryParserRuleCall_1_1_0()); }
		rulePrimary
		{ after(grammarAccess.getMulOrDivAccess().getRhsPrimaryParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__ExprAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getExprPrimaryParserRuleCall_1_2_0()); }
		rulePrimary
		{ after(grammarAccess.getPrimaryAccess().getExprPrimaryParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__ExprAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getExprPrimaryParserRuleCall_2_2_0()); }
		rulePrimary
		{ after(grammarAccess.getPrimaryAccess().getExprPrimaryParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__PatternAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getPatternDefConfigurationParserRuleCall_3_1_0()); }
		ruleDefConfiguration
		{ after(grammarAccess.getPrimaryAccess().getPatternDefConfigurationParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__ExprAssignment_3_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getExprPrimaryParserRuleCall_3_3_0()); }
		rulePrimary
		{ after(grammarAccess.getPrimaryAccess().getExprPrimaryParserRuleCall_3_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ValueAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getValueINTTerminalRuleCall_0_1_0()); }
		RULE_INT
		{ after(grammarAccess.getAtomicAccess().getValueINTTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ValueAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getValueDOUBLETerminalRuleCall_1_1_0()); }
		RULE_DOUBLE
		{ after(grammarAccess.getAtomicAccess().getValueDOUBLETerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ValueAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getValueSTRINGTerminalRuleCall_2_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getAtomicAccess().getValueSTRINGTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ValueAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getValueBOOLTerminalRuleCall_3_1_0()); }
		RULE_BOOL
		{ after(grammarAccess.getAtomicAccess().getValueBOOLTerminalRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_BOOL : ('true'|'false');

RULE_DOUBLE : ('0'..'9')+ '.' ('0'..'9')+;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
