package fr.irisa.diverse.adaptivesemantics.generator.visitors

import fr.irisa.diverse.adaptivesemantics.model.adaptivesemantics.And
import fr.irisa.diverse.adaptivesemantics.model.adaptivesemantics.BinExpr
import fr.irisa.diverse.adaptivesemantics.model.adaptivesemantics.BoolConstant
import fr.irisa.diverse.adaptivesemantics.model.adaptivesemantics.CondExpr
import fr.irisa.diverse.adaptivesemantics.model.adaptivesemantics.Const
import fr.irisa.diverse.adaptivesemantics.model.adaptivesemantics.Div
import fr.irisa.diverse.adaptivesemantics.model.adaptivesemantics.DoubleConstant
import fr.irisa.diverse.adaptivesemantics.model.adaptivesemantics.Equal
import fr.irisa.diverse.adaptivesemantics.model.adaptivesemantics.Expr
import fr.irisa.diverse.adaptivesemantics.model.adaptivesemantics.IntConstant
import fr.irisa.diverse.adaptivesemantics.model.adaptivesemantics.Less
import fr.irisa.diverse.adaptivesemantics.model.adaptivesemantics.LessEq
import fr.irisa.diverse.adaptivesemantics.model.adaptivesemantics.Minus
import fr.irisa.diverse.adaptivesemantics.model.adaptivesemantics.Mult
import fr.irisa.diverse.adaptivesemantics.model.adaptivesemantics.Not
import fr.irisa.diverse.adaptivesemantics.model.adaptivesemantics.NotEqual
import fr.irisa.diverse.adaptivesemantics.model.adaptivesemantics.Or
import fr.irisa.diverse.adaptivesemantics.model.adaptivesemantics.StringConstant

class ExpressionAccepts {
	def Object accept(Expr node, ExpressionVisitor vis){}
	def Object accept(Expr node){}
	def Object accept(BinExpr node, ExpressionVisitor vis){}
	def Object accept(CondExpr node, ExpressionVisitor vis){}
	def Object accept(Const node, ExpressionVisitor vis){}
	def Object accept(Minus node, ExpressionVisitor vis){}
	def Object accept(Div node, ExpressionVisitor vis){}
	def Object accept(Mult node, ExpressionVisitor vis){}
	def Object accept(Or node, ExpressionVisitor vis){}
	def Object accept(And node, ExpressionVisitor vis){}
	def Object accept(Not node, ExpressionVisitor vis){}
	def Object accept(Less node, ExpressionVisitor vis){}
	def Object accept(LessEq node, ExpressionVisitor vis){}
	def Object accept(Equal node, ExpressionVisitor vis){}
	def Object accept(NotEqual node, ExpressionVisitor vis){}
	def Object accept(IntConstant node, ExpressionVisitor vis){}
	def Object accept(BoolConstant node, ExpressionVisitor vis){}
	def Object accept(StringConstant node, ExpressionVisitor vis){}
	def Object accept(DoubleConstant node, ExpressionVisitor vis){}
}