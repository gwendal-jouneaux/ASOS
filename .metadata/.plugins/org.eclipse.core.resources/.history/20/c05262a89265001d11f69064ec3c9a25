package fr.irisa.diverse.adaptivesemantics.generator

import fr.irisa.diverse.adaptivesemantics.model.adaptivesemantics.DefConfiguration
import fr.irisa.diverse.adaptivesemantics.model.adaptivesemantics.Rule

class RuleUtils {
	
	def int compareRules(Rule r1, Rule r2){
		for(var index = 0; index < r1.conclusion.from.childs.length; index++){
			val child1 = r1.conclusion.from.childs.get(index)
			val child2 = r2.conclusion.from.childs.get(index)
			if(child1 instanceof DefConfiguration){
				if(!(child2 instanceof DefConfiguration)){
					return 1
				}
			} else {
				if(child2 instanceof DefConfiguration){
					return -1
				}
			}
		}
		return 0
	}
	
}