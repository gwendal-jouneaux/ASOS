/*
 * generated by Xtext 2.25.0
 */
package fr.irisa.diverse.adaptivesemantics.generator

import fr.irisa.diverse.adaptivesemantics.model.adaptivesemantics.Rule
import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext

class AdaptSemGenerator extends AbstractGenerator {

	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
		val rulesByConcept = resource.allContents
			.filter(Rule)
			.groupBy[conclusion.from.concept]
			
		for (concept : rulesByConcept.keySet) {
			val conceptName = concept.name
			val rules = rulesByConcept.get(concept);
			
			
			fsa.generateFile('greetings.txt', 'People to greet: ')
		}
				
//		fsa.generateFile('greetings.txt', 'People to greet: ' + 
//			resource.allContents
//				.filter(Greeting)
//				.map[name]
//				.join(', '))
	}
}
