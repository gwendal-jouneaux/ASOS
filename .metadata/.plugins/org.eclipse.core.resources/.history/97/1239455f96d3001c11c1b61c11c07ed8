/*
 * generated by Xtext 2.25.0
 */
grammar InternalSemAdapt;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package fr.irisa.diverse.semanticadaptation.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package fr.irisa.diverse.semanticadaptation.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import fr.irisa.diverse.semanticadaptation.services.SemAdaptGrammarAccess;

}
@parser::members {
	private SemAdaptGrammarAccess grammarAccess;

	public void setGrammarAccess(SemAdaptGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleSemanticAdaptation
entryRuleSemanticAdaptation
:
{ before(grammarAccess.getSemanticAdaptationRule()); }
	 ruleSemanticAdaptation
{ after(grammarAccess.getSemanticAdaptationRule()); } 
	 EOF 
;

// Rule SemanticAdaptation
ruleSemanticAdaptation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSemanticAdaptationAccess().getGroup()); }
		(rule__SemanticAdaptation__Group__0)
		{ after(grammarAccess.getSemanticAdaptationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSemantics
entryRuleSemantics
:
{ before(grammarAccess.getSemanticsRule()); }
	 ruleSemantics
{ after(grammarAccess.getSemanticsRule()); } 
	 EOF 
;

// Rule Semantics
ruleSemantics 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSemanticsAccess().getGroup()); }
		(rule__Semantics__Group__0)
		{ after(grammarAccess.getSemanticsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleModule
entryRuleModule
:
{ before(grammarAccess.getModuleRule()); }
	 ruleModule
{ after(grammarAccess.getModuleRule()); } 
	 EOF 
;

// Rule Module
ruleModule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModuleAccess().getGroup()); }
		(rule__Module__Group__0)
		{ after(grammarAccess.getModuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePointcut
entryRulePointcut
:
{ before(grammarAccess.getPointcutRule()); }
	 rulePointcut
{ after(grammarAccess.getPointcutRule()); } 
	 EOF 
;

// Rule Pointcut
rulePointcut 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPointcutAccess().getGroup()); }
		(rule__Pointcut__Group__0)
		{ after(grammarAccess.getPointcutAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAdaptation
entryRuleAdaptation
:
{ before(grammarAccess.getAdaptationRule()); }
	 ruleAdaptation
{ after(grammarAccess.getAdaptationRule()); } 
	 EOF 
;

// Rule Adaptation
ruleAdaptation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAdaptationAccess().getGroup()); }
		(rule__Adaptation__Group__0)
		{ after(grammarAccess.getAdaptationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getGroup()); }
		(rule__Model__Group__0)
		{ after(grammarAccess.getModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImport
entryRuleImport
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImportAccess().getGroup()); }
		(rule__Import__Group__0)
		{ after(grammarAccess.getImportAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRule
entryRuleRule
:
{ before(grammarAccess.getRuleRule()); }
	 ruleRule
{ after(grammarAccess.getRuleRule()); } 
	 EOF 
;

// Rule Rule
ruleRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRuleAccess().getGroup()); }
		(rule__Rule__Group__0)
		{ after(grammarAccess.getRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConclusion
entryRuleConclusion
:
{ before(grammarAccess.getConclusionRule()); }
	 ruleConclusion
{ after(grammarAccess.getConclusionRule()); } 
	 EOF 
;

// Rule Conclusion
ruleConclusion 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConclusionAccess().getGroup()); }
		(rule__Conclusion__Group__0)
		{ after(grammarAccess.getConclusionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConclusionOutput
entryRuleConclusionOutput
:
{ before(grammarAccess.getConclusionOutputRule()); }
	 ruleConclusionOutput
{ after(grammarAccess.getConclusionOutputRule()); } 
	 EOF 
;

// Rule ConclusionOutput
ruleConclusionOutput 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConclusionOutputAccess().getAlternatives()); }
		(rule__ConclusionOutput__Alternatives)
		{ after(grammarAccess.getConclusionOutputAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePremise
entryRulePremise
:
{ before(grammarAccess.getPremiseRule()); }
	 rulePremise
{ after(grammarAccess.getPremiseRule()); } 
	 EOF 
;

// Rule Premise
rulePremise 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPremiseAccess().getGroup()); }
		(rule__Premise__Group__0)
		{ after(grammarAccess.getPremiseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCondition
entryRuleCondition
:
{ before(grammarAccess.getConditionRule()); }
	 ruleCondition
{ after(grammarAccess.getConditionRule()); } 
	 EOF 
;

// Rule Condition
ruleCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionAccess().getGroup()); }
		(rule__Condition__Group__0)
		{ after(grammarAccess.getConditionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDefConfiguration
entryRuleDefConfiguration
:
{ before(grammarAccess.getDefConfigurationRule()); }
	 ruleDefConfiguration
{ after(grammarAccess.getDefConfigurationRule()); } 
	 EOF 
;

// Rule DefConfiguration
ruleDefConfiguration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDefConfigurationAccess().getGroup()); }
		(rule__DefConfiguration__Group__0)
		{ after(grammarAccess.getDefConfigurationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRefConfiguration
entryRuleRefConfiguration
:
{ before(grammarAccess.getRefConfigurationRule()); }
	 ruleRefConfiguration
{ after(grammarAccess.getRefConfigurationRule()); } 
	 EOF 
;

// Rule RefConfiguration
ruleRefConfiguration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRefConfigurationAccess().getGroup()); }
		(rule__RefConfiguration__Group__0)
		{ after(grammarAccess.getRefConfigurationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSymbolDef
entryRuleSymbolDef
:
{ before(grammarAccess.getSymbolDefRule()); }
	 ruleSymbolDef
{ after(grammarAccess.getSymbolDefRule()); } 
	 EOF 
;

// Rule SymbolDef
ruleSymbolDef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSymbolDefAccess().getGroup()); }
		(rule__SymbolDef__Group__0)
		{ after(grammarAccess.getSymbolDefAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSymbolRef
entryRuleSymbolRef
:
{ before(grammarAccess.getSymbolRefRule()); }
	 ruleSymbolRef
{ after(grammarAccess.getSymbolRefRule()); } 
	 EOF 
;

// Rule SymbolRef
ruleSymbolRef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSymbolRefAccess().getGroup()); }
		(rule__SymbolRef__Group__0)
		{ after(grammarAccess.getSymbolRefAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTermDef
entryRuleTermDef
:
{ before(grammarAccess.getTermDefRule()); }
	 ruleTermDef
{ after(grammarAccess.getTermDefRule()); } 
	 EOF 
;

// Rule TermDef
ruleTermDef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTermDefAccess().getAlternatives()); }
		(rule__TermDef__Alternatives)
		{ after(grammarAccess.getTermDefAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTermRef
entryRuleTermRef
:
{ before(grammarAccess.getTermRefRule()); }
	 ruleTermRef
{ after(grammarAccess.getTermRefRule()); } 
	 EOF 
;

// Rule TermRef
ruleTermRef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTermRefAccess().getAlternatives()); }
		(rule__TermRef__Alternatives)
		{ after(grammarAccess.getTermRefAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleListDef
entryRuleListDef
:
{ before(grammarAccess.getListDefRule()); }
	 ruleListDef
{ after(grammarAccess.getListDefRule()); } 
	 EOF 
;

// Rule ListDef
ruleListDef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getListDefAccess().getGroup()); }
		(rule__ListDef__Group__0)
		{ after(grammarAccess.getListDefAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleListRef
entryRuleListRef
:
{ before(grammarAccess.getListRefRule()); }
	 ruleListRef
{ after(grammarAccess.getListRefRule()); } 
	 EOF 
;

// Rule ListRef
ruleListRef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getListRefAccess().getGroup()); }
		(rule__ListRef__Group__0)
		{ after(grammarAccess.getListRefAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleListAppend
entryRuleListAppend
:
{ before(grammarAccess.getListAppendRule()); }
	 ruleListAppend
{ after(grammarAccess.getListAppendRule()); } 
	 EOF 
;

// Rule ListAppend
ruleListAppend 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getListAppendAccess().getGroup()); }
		(rule__ListAppend__Group__0)
		{ after(grammarAccess.getListAppendAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSemanticDomainAccess
entryRuleSemanticDomainAccess
:
{ before(grammarAccess.getSemanticDomainAccessRule()); }
	 ruleSemanticDomainAccess
{ after(grammarAccess.getSemanticDomainAccessRule()); } 
	 EOF 
;

// Rule SemanticDomainAccess
ruleSemanticDomainAccess 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSemanticDomainAccessAccess().getPathAssignment()); }
		(rule__SemanticDomainAccess__PathAssignment)
		{ after(grammarAccess.getSemanticDomainAccessAccess().getPathAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSemanticDomainUpdate
entryRuleSemanticDomainUpdate
:
{ before(grammarAccess.getSemanticDomainUpdateRule()); }
	 ruleSemanticDomainUpdate
{ after(grammarAccess.getSemanticDomainUpdateRule()); } 
	 EOF 
;

// Rule SemanticDomainUpdate
ruleSemanticDomainUpdate 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSemanticDomainUpdateAccess().getGroup()); }
		(rule__SemanticDomainUpdate__Group__0)
		{ after(grammarAccess.getSemanticDomainUpdateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEString
entryRuleEString
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEStringAccess().getAlternatives()); }
		(rule__EString__Alternatives)
		{ after(grammarAccess.getEStringAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFQN
entryRuleFQN
:
{ before(grammarAccess.getFQNRule()); }
	 ruleFQN
{ after(grammarAccess.getFQNRule()); } 
	 EOF 
;

// Rule FQN
ruleFQN 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFQNAccess().getGroup()); }
		(rule__FQN__Group__0)
		{ after(grammarAccess.getFQNAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttributeFQN
entryRuleAttributeFQN
:
{ before(grammarAccess.getAttributeFQNRule()); }
	 ruleAttributeFQN
{ after(grammarAccess.getAttributeFQNRule()); } 
	 EOF 
;

// Rule AttributeFQN
ruleAttributeFQN 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttributeFQNAccess().getGroup()); }
		(rule__AttributeFQN__Group__0)
		{ after(grammarAccess.getAttributeFQNAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Adaptation__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdaptationAccess().getGroup_0_0()); }
		(rule__Adaptation__Group_0_0__0)
		{ after(grammarAccess.getAdaptationAccess().getGroup_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAdaptationAccess().getGroup_0_1()); }
		(rule__Adaptation__Group_0_1__0)
		{ after(grammarAccess.getAdaptationAccess().getGroup_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getAdaptationAccess().getGroup_0_2()); }
		(rule__Adaptation__Group_0_2__0)
		{ after(grammarAccess.getAdaptationAccess().getGroup_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Alternatives_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAccess().getPremisesAssignment_4_1_0()); }
		(rule__Rule__PremisesAssignment_4_1_0)
		{ after(grammarAccess.getRuleAccess().getPremisesAssignment_4_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getRuleAccess().getConditionsAssignment_4_1_1()); }
		(rule__Rule__ConditionsAssignment_4_1_1)
		{ after(grammarAccess.getRuleAccess().getConditionsAssignment_4_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Alternatives_4_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAccess().getPremisesAssignment_4_2_1_0()); }
		(rule__Rule__PremisesAssignment_4_2_1_0)
		{ after(grammarAccess.getRuleAccess().getPremisesAssignment_4_2_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getRuleAccess().getConditionsAssignment_4_2_1_1()); }
		(rule__Rule__ConditionsAssignment_4_2_1_1)
		{ after(grammarAccess.getRuleAccess().getConditionsAssignment_4_2_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConclusionOutput__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConclusionOutputAccess().getTermRefParserRuleCall_0()); }
		ruleTermRef
		{ after(grammarAccess.getConclusionOutputAccess().getTermRefParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getConclusionOutputAccess().getSemanticDomainUpdateParserRuleCall_1()); }
		ruleSemanticDomainUpdate
		{ after(grammarAccess.getConclusionOutputAccess().getSemanticDomainUpdateParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getConclusionOutputAccess().getSemanticDomainAccessParserRuleCall_2()); }
		ruleSemanticDomainAccess
		{ after(grammarAccess.getConclusionOutputAccess().getSemanticDomainAccessParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TermDef__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTermDefAccess().getSymbolDefParserRuleCall_0()); }
		ruleSymbolDef
		{ after(grammarAccess.getTermDefAccess().getSymbolDefParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTermDefAccess().getDefConfigurationParserRuleCall_1()); }
		ruleDefConfiguration
		{ after(grammarAccess.getTermDefAccess().getDefConfigurationParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getTermDefAccess().getListDefParserRuleCall_2()); }
		ruleListDef
		{ after(grammarAccess.getTermDefAccess().getListDefParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TermRef__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTermRefAccess().getSymbolRefParserRuleCall_0()); }
		ruleSymbolRef
		{ after(grammarAccess.getTermRefAccess().getSymbolRefParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTermRefAccess().getRefConfigurationParserRuleCall_1()); }
		ruleRefConfiguration
		{ after(grammarAccess.getTermRefAccess().getRefConfigurationParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getTermRefAccess().getListRefParserRuleCall_2()); }
		ruleListRef
		{ after(grammarAccess.getTermRefAccess().getListRefParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getTermRefAccess().getListAppendParserRuleCall_3()); }
		ruleListAppend
		{ after(grammarAccess.getTermRefAccess().getListAppendParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EString__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
		RULE_ID
		{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SemanticAdaptation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SemanticAdaptation__Group__0__Impl
	rule__SemanticAdaptation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SemanticAdaptation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSemanticAdaptationAccess().getModelAssignment_0()); }
	(rule__SemanticAdaptation__ModelAssignment_0)
	{ after(grammarAccess.getSemanticAdaptationAccess().getModelAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SemanticAdaptation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SemanticAdaptation__Group__1__Impl
	rule__SemanticAdaptation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SemanticAdaptation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSemanticAdaptationAccess().getSemanticsAssignment_1()); }
	(rule__SemanticAdaptation__SemanticsAssignment_1)
	{ after(grammarAccess.getSemanticAdaptationAccess().getSemanticsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SemanticAdaptation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SemanticAdaptation__Group__2__Impl
	rule__SemanticAdaptation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SemanticAdaptation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSemanticAdaptationAccess().getImportsAssignment_2()); }
	(rule__SemanticAdaptation__ImportsAssignment_2)*
	{ after(grammarAccess.getSemanticAdaptationAccess().getImportsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SemanticAdaptation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SemanticAdaptation__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SemanticAdaptation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSemanticAdaptationAccess().getModulesAssignment_3()); }
	(rule__SemanticAdaptation__ModulesAssignment_3)*
	{ after(grammarAccess.getSemanticAdaptationAccess().getModulesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Semantics__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Semantics__Group__0__Impl
	rule__Semantics__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Semantics__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSemanticsAccess().getSemanticsKeyword_0()); }
	'semantics'
	{ after(grammarAccess.getSemanticsAccess().getSemanticsKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Semantics__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Semantics__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Semantics__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSemanticsAccess().getImportURIAssignment_1()); }
	(rule__Semantics__ImportURIAssignment_1)
	{ after(grammarAccess.getSemanticsAccess().getImportURIAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Module__Group__0__Impl
	rule__Module__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleAccess().getRecursiveAssignment_0()); }
	(rule__Module__RecursiveAssignment_0)?
	{ after(grammarAccess.getModuleAccess().getRecursiveAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Module__Group__1__Impl
	rule__Module__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleAccess().getNameAssignment_1()); }
	(rule__Module__NameAssignment_1)
	{ after(grammarAccess.getModuleAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Module__Group__2__Impl
	rule__Module__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getModuleAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Module__Group__3__Impl
	rule__Module__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleAccess().getPointcutsAssignment_3()); }
	(rule__Module__PointcutsAssignment_3)*
	{ after(grammarAccess.getModuleAccess().getPointcutsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Module__Group__4__Impl
	rule__Module__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleAccess().getAdaptationsAssignment_4()); }
	(rule__Module__AdaptationsAssignment_4)*
	{ after(grammarAccess.getModuleAccess().getAdaptationsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Module__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getModuleAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Pointcut__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pointcut__Group__0__Impl
	rule__Pointcut__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pointcut__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointcutAccess().getMatchKeyword_0()); }
	'match'
	{ after(grammarAccess.getPointcutAccess().getMatchKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pointcut__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pointcut__Group__1__Impl
	rule__Pointcut__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Pointcut__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointcutAccess().getStructureAssignment_1()); }
	(rule__Pointcut__StructureAssignment_1)
	{ after(grammarAccess.getPointcutAccess().getStructureAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pointcut__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pointcut__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pointcut__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointcutAccess().getGroup_2()); }
	(rule__Pointcut__Group_2__0)?
	{ after(grammarAccess.getPointcutAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Pointcut__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pointcut__Group_2__0__Impl
	rule__Pointcut__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pointcut__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointcutAccess().getWhereKeyword_2_0()); }
	'where'
	{ after(grammarAccess.getPointcutAccess().getWhereKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pointcut__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pointcut__Group_2__1__Impl
	rule__Pointcut__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Pointcut__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointcutAccess().getConditionsAssignment_2_1()); }
	(rule__Pointcut__ConditionsAssignment_2_1)
	{ after(grammarAccess.getPointcutAccess().getConditionsAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pointcut__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pointcut__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pointcut__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointcutAccess().getGroup_2_2()); }
	(rule__Pointcut__Group_2_2__0)*
	{ after(grammarAccess.getPointcutAccess().getGroup_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Pointcut__Group_2_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pointcut__Group_2_2__0__Impl
	rule__Pointcut__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pointcut__Group_2_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointcutAccess().getCommaKeyword_2_2_0()); }
	','
	{ after(grammarAccess.getPointcutAccess().getCommaKeyword_2_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pointcut__Group_2_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pointcut__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pointcut__Group_2_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPointcutAccess().getConditionsAssignment_2_2_1()); }
	(rule__Pointcut__ConditionsAssignment_2_2_1)
	{ after(grammarAccess.getPointcutAccess().getConditionsAssignment_2_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Adaptation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Adaptation__Group__0__Impl
	rule__Adaptation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Adaptation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdaptationAccess().getAlternatives_0()); }
	(rule__Adaptation__Alternatives_0)
	{ after(grammarAccess.getAdaptationAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Adaptation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Adaptation__Group__1__Impl
	rule__Adaptation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Adaptation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdaptationAccess().getTargetAssignment_1()); }
	(rule__Adaptation__TargetAssignment_1)
	{ after(grammarAccess.getAdaptationAccess().getTargetAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Adaptation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Adaptation__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Adaptation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdaptationAccess().getAdaptationAssignment_2()); }
	(rule__Adaptation__AdaptationAssignment_2)
	{ after(grammarAccess.getAdaptationAccess().getAdaptationAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Adaptation__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Adaptation__Group_0_0__0__Impl
	rule__Adaptation__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Adaptation__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdaptationAccess().getSpecializationAction_0_0_0()); }
	()
	{ after(grammarAccess.getAdaptationAccess().getSpecializationAction_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Adaptation__Group_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Adaptation__Group_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Adaptation__Group_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdaptationAccess().getSpecializationKeyword_0_0_1()); }
	'Specialization'
	{ after(grammarAccess.getAdaptationAccess().getSpecializationKeyword_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Adaptation__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Adaptation__Group_0_1__0__Impl
	rule__Adaptation__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Adaptation__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdaptationAccess().getBeforeAction_0_1_0()); }
	()
	{ after(grammarAccess.getAdaptationAccess().getBeforeAction_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Adaptation__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Adaptation__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Adaptation__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdaptationAccess().getBeforeKeyword_0_1_1()); }
	'Before'
	{ after(grammarAccess.getAdaptationAccess().getBeforeKeyword_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Adaptation__Group_0_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Adaptation__Group_0_2__0__Impl
	rule__Adaptation__Group_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Adaptation__Group_0_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdaptationAccess().getAfterAction_0_2_0()); }
	()
	{ after(grammarAccess.getAdaptationAccess().getAfterAction_0_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Adaptation__Group_0_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Adaptation__Group_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Adaptation__Group_0_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdaptationAccess().getAfterKeyword_0_2_1()); }
	'After'
	{ after(grammarAccess.getAdaptationAccess().getAfterKeyword_0_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getModelKeyword_0()); }
	'model'
	{ after(grammarAccess.getModelAccess().getModelKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getImportURIAssignment_1()); }
	(rule__Model__ImportURIAssignment_1)
	{ after(grammarAccess.getModelAccess().getImportURIAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__0__Impl
	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getImportKeyword_0()); }
	'import'
	{ after(grammarAccess.getImportAccess().getImportKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__1__Impl
	rule__Import__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getImportURIAssignment_1()); }
	(rule__Import__ImportURIAssignment_1)
	{ after(grammarAccess.getImportAccess().getImportURIAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__2__Impl
	rule__Import__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getAsKeyword_2()); }
	'as'
	{ after(grammarAccess.getImportAccess().getAsKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getNameAssignment_3()); }
	(rule__Import__NameAssignment_3)
	{ after(grammarAccess.getImportAccess().getNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__0__Impl
	rule__Rule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getRuleKeyword_0()); }
	'rule'
	{ after(grammarAccess.getRuleAccess().getRuleKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__1__Impl
	rule__Rule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getNameAssignment_1()); }
	(rule__Rule__NameAssignment_1)
	{ after(grammarAccess.getRuleAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__2__Impl
	rule__Rule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getCommaKeyword_2()); }
	','
	{ after(grammarAccess.getRuleAccess().getCommaKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__3__Impl
	rule__Rule__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getConclusionAssignment_3()); }
	(rule__Rule__ConclusionAssignment_3)
	{ after(grammarAccess.getRuleAccess().getConclusionAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getGroup_4()); }
	(rule__Rule__Group_4__0)?
	{ after(grammarAccess.getRuleAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group_4__0__Impl
	rule__Rule__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getWhereKeyword_4_0()); }
	'where'
	{ after(grammarAccess.getRuleAccess().getWhereKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group_4__1__Impl
	rule__Rule__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getAlternatives_4_1()); }
	(rule__Rule__Alternatives_4_1)
	{ after(grammarAccess.getRuleAccess().getAlternatives_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getGroup_4_2()); }
	(rule__Rule__Group_4_2__0)*
	{ after(grammarAccess.getRuleAccess().getGroup_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group_4_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group_4_2__0__Impl
	rule__Rule__Group_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_4_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getCommaKeyword_4_2_0()); }
	','
	{ after(grammarAccess.getRuleAccess().getCommaKeyword_4_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_4_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group_4_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getAlternatives_4_2_1()); }
	(rule__Rule__Alternatives_4_2_1)
	{ after(grammarAccess.getRuleAccess().getAlternatives_4_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Conclusion__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conclusion__Group__0__Impl
	rule__Conclusion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Conclusion__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConclusionAccess().getFromAssignment_0()); }
	(rule__Conclusion__FromAssignment_0)
	{ after(grammarAccess.getConclusionAccess().getFromAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conclusion__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conclusion__Group__1__Impl
	rule__Conclusion__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Conclusion__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConclusionAccess().getHyphenMinusGreaterThanSignKeyword_1()); }
	'->'
	{ after(grammarAccess.getConclusionAccess().getHyphenMinusGreaterThanSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conclusion__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conclusion__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Conclusion__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConclusionAccess().getToAssignment_2()); }
	(rule__Conclusion__ToAssignment_2)
	{ after(grammarAccess.getConclusionAccess().getToAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Premise__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Premise__Group__0__Impl
	rule__Premise__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Premise__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPremiseAccess().getFromAssignment_0()); }
	(rule__Premise__FromAssignment_0)
	{ after(grammarAccess.getPremiseAccess().getFromAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Premise__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Premise__Group__1__Impl
	rule__Premise__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Premise__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPremiseAccess().getHyphenMinusGreaterThanSignKeyword_1()); }
	'->'
	{ after(grammarAccess.getPremiseAccess().getHyphenMinusGreaterThanSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Premise__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Premise__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Premise__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPremiseAccess().getToAssignment_2()); }
	(rule__Premise__ToAssignment_2)
	{ after(grammarAccess.getPremiseAccess().getToAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Condition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group__0__Impl
	rule__Condition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getConditionAction_0()); }
	()
	{ after(grammarAccess.getConditionAccess().getConditionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getOclPredicateAssignment_1()); }
	(rule__Condition__OclPredicateAssignment_1)
	{ after(grammarAccess.getConditionAccess().getOclPredicateAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DefConfiguration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefConfiguration__Group__0__Impl
	rule__DefConfiguration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefConfiguration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefConfigurationAccess().getConceptAssignment_0()); }
	(rule__DefConfiguration__ConceptAssignment_0)
	{ after(grammarAccess.getDefConfigurationAccess().getConceptAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefConfiguration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefConfiguration__Group__1__Impl
	rule__DefConfiguration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DefConfiguration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefConfigurationAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getDefConfigurationAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefConfiguration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefConfiguration__Group__2__Impl
	rule__DefConfiguration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DefConfiguration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefConfigurationAccess().getGroup_2()); }
	(rule__DefConfiguration__Group_2__0)?
	{ after(grammarAccess.getDefConfigurationAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefConfiguration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefConfiguration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefConfiguration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefConfigurationAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getDefConfigurationAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DefConfiguration__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefConfiguration__Group_2__0__Impl
	rule__DefConfiguration__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefConfiguration__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefConfigurationAccess().getChildsAssignment_2_0()); }
	(rule__DefConfiguration__ChildsAssignment_2_0)
	{ after(grammarAccess.getDefConfigurationAccess().getChildsAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefConfiguration__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefConfiguration__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefConfiguration__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefConfigurationAccess().getGroup_2_1()); }
	(rule__DefConfiguration__Group_2_1__0)*
	{ after(grammarAccess.getDefConfigurationAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DefConfiguration__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefConfiguration__Group_2_1__0__Impl
	rule__DefConfiguration__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefConfiguration__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefConfigurationAccess().getCommaKeyword_2_1_0()); }
	','
	{ after(grammarAccess.getDefConfigurationAccess().getCommaKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefConfiguration__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DefConfiguration__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefConfiguration__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefConfigurationAccess().getChildsAssignment_2_1_1()); }
	(rule__DefConfiguration__ChildsAssignment_2_1_1)
	{ after(grammarAccess.getDefConfigurationAccess().getChildsAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RefConfiguration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RefConfiguration__Group__0__Impl
	rule__RefConfiguration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RefConfiguration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRefConfigurationAccess().getConceptAssignment_0()); }
	(rule__RefConfiguration__ConceptAssignment_0)
	{ after(grammarAccess.getRefConfigurationAccess().getConceptAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RefConfiguration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RefConfiguration__Group__1__Impl
	rule__RefConfiguration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RefConfiguration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRefConfigurationAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getRefConfigurationAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RefConfiguration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RefConfiguration__Group__2__Impl
	rule__RefConfiguration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RefConfiguration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRefConfigurationAccess().getGroup_2()); }
	(rule__RefConfiguration__Group_2__0)?
	{ after(grammarAccess.getRefConfigurationAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RefConfiguration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RefConfiguration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RefConfiguration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRefConfigurationAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getRefConfigurationAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RefConfiguration__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RefConfiguration__Group_2__0__Impl
	rule__RefConfiguration__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RefConfiguration__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRefConfigurationAccess().getChildsAssignment_2_0()); }
	(rule__RefConfiguration__ChildsAssignment_2_0)
	{ after(grammarAccess.getRefConfigurationAccess().getChildsAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RefConfiguration__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RefConfiguration__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RefConfiguration__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRefConfigurationAccess().getGroup_2_1()); }
	(rule__RefConfiguration__Group_2_1__0)*
	{ after(grammarAccess.getRefConfigurationAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RefConfiguration__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RefConfiguration__Group_2_1__0__Impl
	rule__RefConfiguration__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RefConfiguration__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRefConfigurationAccess().getCommaKeyword_2_1_0()); }
	','
	{ after(grammarAccess.getRefConfigurationAccess().getCommaKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RefConfiguration__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RefConfiguration__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RefConfiguration__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRefConfigurationAccess().getChildsAssignment_2_1_1()); }
	(rule__RefConfiguration__ChildsAssignment_2_1_1)
	{ after(grammarAccess.getRefConfigurationAccess().getChildsAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SymbolDef__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SymbolDef__Group__0__Impl
	rule__SymbolDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolDef__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSymbolDefAccess().getSymbolDefAction_0()); }
	()
	{ after(grammarAccess.getSymbolDefAccess().getSymbolDefAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolDef__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SymbolDef__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolDef__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSymbolDefAccess().getNameAssignment_1()); }
	(rule__SymbolDef__NameAssignment_1)
	{ after(grammarAccess.getSymbolDefAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SymbolRef__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SymbolRef__Group__0__Impl
	rule__SymbolRef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolRef__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSymbolRefAccess().getSymbolRefAction_0()); }
	()
	{ after(grammarAccess.getSymbolRefAccess().getSymbolRefAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolRef__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SymbolRef__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolRef__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSymbolRefAccess().getDefAssignment_1()); }
	(rule__SymbolRef__DefAssignment_1)
	{ after(grammarAccess.getSymbolRefAccess().getDefAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ListDef__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListDef__Group__0__Impl
	rule__ListDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListDef__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListDefAccess().getLeftSquareBracketKeyword_0()); }
	'['
	{ after(grammarAccess.getListDefAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListDef__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListDef__Group__1__Impl
	rule__ListDef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ListDef__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListDefAccess().getHeadAssignment_1()); }
	(rule__ListDef__HeadAssignment_1)
	{ after(grammarAccess.getListDefAccess().getHeadAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListDef__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListDef__Group__2__Impl
	rule__ListDef__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ListDef__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListDefAccess().getVerticalLineKeyword_2()); }
	'|'
	{ after(grammarAccess.getListDefAccess().getVerticalLineKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListDef__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListDef__Group__3__Impl
	rule__ListDef__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ListDef__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListDefAccess().getTailAssignment_3()); }
	(rule__ListDef__TailAssignment_3)
	{ after(grammarAccess.getListDefAccess().getTailAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListDef__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListDef__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListDef__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListDefAccess().getRightSquareBracketKeyword_4()); }
	']'
	{ after(grammarAccess.getListDefAccess().getRightSquareBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ListRef__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListRef__Group__0__Impl
	rule__ListRef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListRef__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListRefAccess().getLeftSquareBracketKeyword_0()); }
	'['
	{ after(grammarAccess.getListRefAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListRef__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListRef__Group__1__Impl
	rule__ListRef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ListRef__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListRefAccess().getHeadAssignment_1()); }
	(rule__ListRef__HeadAssignment_1)
	{ after(grammarAccess.getListRefAccess().getHeadAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListRef__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListRef__Group__2__Impl
	rule__ListRef__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ListRef__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListRefAccess().getVerticalLineKeyword_2()); }
	'|'
	{ after(grammarAccess.getListRefAccess().getVerticalLineKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListRef__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListRef__Group__3__Impl
	rule__ListRef__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ListRef__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListRefAccess().getTailAssignment_3()); }
	(rule__ListRef__TailAssignment_3)
	{ after(grammarAccess.getListRefAccess().getTailAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListRef__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListRef__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListRef__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListRefAccess().getRightSquareBracketKeyword_4()); }
	']'
	{ after(grammarAccess.getListRefAccess().getRightSquareBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ListAppend__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListAppend__Group__0__Impl
	rule__ListAppend__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListAppend__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListAppendAccess().getLeftSquareBracketKeyword_0()); }
	'['
	{ after(grammarAccess.getListAppendAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListAppend__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListAppend__Group__1__Impl
	rule__ListAppend__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ListAppend__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListAppendAccess().getHeadAssignment_1()); }
	(rule__ListAppend__HeadAssignment_1)
	{ after(grammarAccess.getListAppendAccess().getHeadAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListAppend__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListAppend__Group__2__Impl
	rule__ListAppend__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ListAppend__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListAppendAccess().getPlusSignKeyword_2()); }
	'+'
	{ after(grammarAccess.getListAppendAccess().getPlusSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListAppend__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListAppend__Group__3__Impl
	rule__ListAppend__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ListAppend__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListAppendAccess().getTailAssignment_3()); }
	(rule__ListAppend__TailAssignment_3)
	{ after(grammarAccess.getListAppendAccess().getTailAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListAppend__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListAppend__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListAppend__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListAppendAccess().getRightSquareBracketKeyword_4()); }
	']'
	{ after(grammarAccess.getListAppendAccess().getRightSquareBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SemanticDomainUpdate__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SemanticDomainUpdate__Group__0__Impl
	rule__SemanticDomainUpdate__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SemanticDomainUpdate__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSemanticDomainUpdateAccess().getPathAssignment_0()); }
	(rule__SemanticDomainUpdate__PathAssignment_0)
	{ after(grammarAccess.getSemanticDomainUpdateAccess().getPathAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SemanticDomainUpdate__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SemanticDomainUpdate__Group__1__Impl
	rule__SemanticDomainUpdate__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SemanticDomainUpdate__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSemanticDomainUpdateAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getSemanticDomainUpdateAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SemanticDomainUpdate__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SemanticDomainUpdate__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SemanticDomainUpdate__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSemanticDomainUpdateAccess().getValueAssignment_2()); }
	(rule__SemanticDomainUpdate__ValueAssignment_2)
	{ after(grammarAccess.getSemanticDomainUpdateAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FQN__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FQN__Group__0__Impl
	rule__FQN__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFQNAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
	{ after(grammarAccess.getFQNAccess().getIDTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FQN__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFQNAccess().getGroup_1()); }
	(rule__FQN__Group_1__0)*
	{ after(grammarAccess.getFQNAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FQN__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FQN__Group_1__0__Impl
	rule__FQN__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFQNAccess().getFullStopKeyword_1_0()); }
	'.'
	{ after(grammarAccess.getFQNAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FQN__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFQNAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
	{ after(grammarAccess.getFQNAccess().getIDTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeFQN__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeFQN__Group__0__Impl
	rule__AttributeFQN__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeFQN__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeFQNAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
	{ after(grammarAccess.getAttributeFQNAccess().getIDTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeFQN__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeFQN__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeFQN__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getAttributeFQNAccess().getGroup_1()); }
		(rule__AttributeFQN__Group_1__0)
		{ after(grammarAccess.getAttributeFQNAccess().getGroup_1()); }
	)
	(
		{ before(grammarAccess.getAttributeFQNAccess().getGroup_1()); }
		(rule__AttributeFQN__Group_1__0)*
		{ after(grammarAccess.getAttributeFQNAccess().getGroup_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeFQN__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeFQN__Group_1__0__Impl
	rule__AttributeFQN__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeFQN__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeFQNAccess().getFullStopKeyword_1_0()); }
	'.'
	{ after(grammarAccess.getAttributeFQNAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeFQN__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeFQN__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeFQN__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeFQNAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
	{ after(grammarAccess.getAttributeFQNAccess().getIDTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SemanticAdaptation__ModelAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSemanticAdaptationAccess().getModelModelParserRuleCall_0_0()); }
		ruleModel
		{ after(grammarAccess.getSemanticAdaptationAccess().getModelModelParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SemanticAdaptation__SemanticsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSemanticAdaptationAccess().getSemanticsSemanticsParserRuleCall_1_0()); }
		ruleSemantics
		{ after(grammarAccess.getSemanticAdaptationAccess().getSemanticsSemanticsParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SemanticAdaptation__ImportsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSemanticAdaptationAccess().getImportsImportParserRuleCall_2_0()); }
		ruleImport
		{ after(grammarAccess.getSemanticAdaptationAccess().getImportsImportParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SemanticAdaptation__ModulesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSemanticAdaptationAccess().getModulesModuleParserRuleCall_3_0()); }
		ruleModule
		{ after(grammarAccess.getSemanticAdaptationAccess().getModulesModuleParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Semantics__ImportURIAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSemanticsAccess().getImportURIEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getSemanticsAccess().getImportURIEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__RecursiveAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModuleAccess().getRecursiveRecursiveKeyword_0_0()); }
		(
			{ before(grammarAccess.getModuleAccess().getRecursiveRecursiveKeyword_0_0()); }
			'recursive'
			{ after(grammarAccess.getModuleAccess().getRecursiveRecursiveKeyword_0_0()); }
		)
		{ after(grammarAccess.getModuleAccess().getRecursiveRecursiveKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModuleAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getModuleAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__PointcutsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModuleAccess().getPointcutsPointcutParserRuleCall_3_0()); }
		rulePointcut
		{ after(grammarAccess.getModuleAccess().getPointcutsPointcutParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__AdaptationsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModuleAccess().getAdaptationsAdaptationParserRuleCall_4_0()); }
		ruleAdaptation
		{ after(grammarAccess.getModuleAccess().getAdaptationsAdaptationParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pointcut__StructureAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPointcutAccess().getStructureDefConfigurationParserRuleCall_1_0()); }
		ruleDefConfiguration
		{ after(grammarAccess.getPointcutAccess().getStructureDefConfigurationParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pointcut__ConditionsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPointcutAccess().getConditionsConditionParserRuleCall_2_1_0()); }
		ruleCondition
		{ after(grammarAccess.getPointcutAccess().getConditionsConditionParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pointcut__ConditionsAssignment_2_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPointcutAccess().getConditionsConditionParserRuleCall_2_2_1_0()); }
		ruleCondition
		{ after(grammarAccess.getPointcutAccess().getConditionsConditionParserRuleCall_2_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Adaptation__TargetAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdaptationAccess().getTargetRuleCrossReference_1_0()); }
		(
			{ before(grammarAccess.getAdaptationAccess().getTargetRuleIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAdaptationAccess().getTargetRuleIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getAdaptationAccess().getTargetRuleCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Adaptation__AdaptationAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdaptationAccess().getAdaptationRuleParserRuleCall_2_0()); }
		ruleRule
		{ after(grammarAccess.getAdaptationAccess().getAdaptationRuleParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ImportURIAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getImportURIEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getModelAccess().getImportURIEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__ImportURIAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportAccess().getImportURIEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getImportAccess().getImportURIEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__NameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportAccess().getNameIDTerminalRuleCall_3_0()); }
		RULE_ID
		{ after(grammarAccess.getImportAccess().getNameIDTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getRuleAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__ConclusionAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAccess().getConclusionConclusionParserRuleCall_3_0()); }
		ruleConclusion
		{ after(grammarAccess.getRuleAccess().getConclusionConclusionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__PremisesAssignment_4_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAccess().getPremisesPremiseParserRuleCall_4_1_0_0()); }
		rulePremise
		{ after(grammarAccess.getRuleAccess().getPremisesPremiseParserRuleCall_4_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__ConditionsAssignment_4_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAccess().getConditionsConditionParserRuleCall_4_1_1_0()); }
		ruleCondition
		{ after(grammarAccess.getRuleAccess().getConditionsConditionParserRuleCall_4_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__PremisesAssignment_4_2_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAccess().getPremisesPremiseParserRuleCall_4_2_1_0_0()); }
		rulePremise
		{ after(grammarAccess.getRuleAccess().getPremisesPremiseParserRuleCall_4_2_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__ConditionsAssignment_4_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAccess().getConditionsConditionParserRuleCall_4_2_1_1_0()); }
		ruleCondition
		{ after(grammarAccess.getRuleAccess().getConditionsConditionParserRuleCall_4_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conclusion__FromAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConclusionAccess().getFromDefConfigurationParserRuleCall_0_0()); }
		ruleDefConfiguration
		{ after(grammarAccess.getConclusionAccess().getFromDefConfigurationParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conclusion__ToAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConclusionAccess().getToConclusionOutputParserRuleCall_2_0()); }
		ruleConclusionOutput
		{ after(grammarAccess.getConclusionAccess().getToConclusionOutputParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Premise__FromAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPremiseAccess().getFromTermRefParserRuleCall_0_0()); }
		ruleTermRef
		{ after(grammarAccess.getPremiseAccess().getFromTermRefParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Premise__ToAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPremiseAccess().getToTermDefParserRuleCall_2_0()); }
		ruleTermDef
		{ after(grammarAccess.getPremiseAccess().getToTermDefParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__OclPredicateAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getOclPredicateEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getConditionAccess().getOclPredicateEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefConfiguration__ConceptAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefConfigurationAccess().getConceptEClassifierCrossReference_0_0()); }
		(
			{ before(grammarAccess.getDefConfigurationAccess().getConceptEClassifierFQNParserRuleCall_0_0_1()); }
			ruleFQN
			{ after(grammarAccess.getDefConfigurationAccess().getConceptEClassifierFQNParserRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getDefConfigurationAccess().getConceptEClassifierCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefConfiguration__ChildsAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefConfigurationAccess().getChildsTermDefParserRuleCall_2_0_0()); }
		ruleTermDef
		{ after(grammarAccess.getDefConfigurationAccess().getChildsTermDefParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefConfiguration__ChildsAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefConfigurationAccess().getChildsTermDefParserRuleCall_2_1_1_0()); }
		ruleTermDef
		{ after(grammarAccess.getDefConfigurationAccess().getChildsTermDefParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RefConfiguration__ConceptAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRefConfigurationAccess().getConceptEClassifierCrossReference_0_0()); }
		(
			{ before(grammarAccess.getRefConfigurationAccess().getConceptEClassifierFQNParserRuleCall_0_0_1()); }
			ruleFQN
			{ after(grammarAccess.getRefConfigurationAccess().getConceptEClassifierFQNParserRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getRefConfigurationAccess().getConceptEClassifierCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RefConfiguration__ChildsAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRefConfigurationAccess().getChildsTermRefParserRuleCall_2_0_0()); }
		ruleTermRef
		{ after(grammarAccess.getRefConfigurationAccess().getChildsTermRefParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RefConfiguration__ChildsAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRefConfigurationAccess().getChildsTermRefParserRuleCall_2_1_1_0()); }
		ruleTermRef
		{ after(grammarAccess.getRefConfigurationAccess().getChildsTermRefParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolDef__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSymbolDefAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getSymbolDefAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolRef__DefAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSymbolRefAccess().getDefSymbolDefCrossReference_1_0()); }
		(
			{ before(grammarAccess.getSymbolRefAccess().getDefSymbolDefIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getSymbolRefAccess().getDefSymbolDefIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getSymbolRefAccess().getDefSymbolDefCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListDef__HeadAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListDefAccess().getHeadSymbolDefParserRuleCall_1_0()); }
		ruleSymbolDef
		{ after(grammarAccess.getListDefAccess().getHeadSymbolDefParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListDef__TailAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListDefAccess().getTailSymbolDefParserRuleCall_3_0()); }
		ruleSymbolDef
		{ after(grammarAccess.getListDefAccess().getTailSymbolDefParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListRef__HeadAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListRefAccess().getHeadSymbolRefParserRuleCall_1_0()); }
		ruleSymbolRef
		{ after(grammarAccess.getListRefAccess().getHeadSymbolRefParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListRef__TailAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListRefAccess().getTailSymbolRefParserRuleCall_3_0()); }
		ruleSymbolRef
		{ after(grammarAccess.getListRefAccess().getTailSymbolRefParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListAppend__HeadAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListAppendAccess().getHeadTermRefParserRuleCall_1_0()); }
		ruleTermRef
		{ after(grammarAccess.getListAppendAccess().getHeadTermRefParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListAppend__TailAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListAppendAccess().getTailTermRefParserRuleCall_3_0()); }
		ruleTermRef
		{ after(grammarAccess.getListAppendAccess().getTailTermRefParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SemanticDomainAccess__PathAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSemanticDomainAccessAccess().getPathEStructuralFeatureCrossReference_0()); }
		(
			{ before(grammarAccess.getSemanticDomainAccessAccess().getPathEStructuralFeatureAttributeFQNParserRuleCall_0_1()); }
			ruleAttributeFQN
			{ after(grammarAccess.getSemanticDomainAccessAccess().getPathEStructuralFeatureAttributeFQNParserRuleCall_0_1()); }
		)
		{ after(grammarAccess.getSemanticDomainAccessAccess().getPathEStructuralFeatureCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SemanticDomainUpdate__PathAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSemanticDomainUpdateAccess().getPathEStructuralFeatureCrossReference_0_0()); }
		(
			{ before(grammarAccess.getSemanticDomainUpdateAccess().getPathEStructuralFeatureAttributeFQNParserRuleCall_0_0_1()); }
			ruleAttributeFQN
			{ after(grammarAccess.getSemanticDomainUpdateAccess().getPathEStructuralFeatureAttributeFQNParserRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getSemanticDomainUpdateAccess().getPathEStructuralFeatureCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SemanticDomainUpdate__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSemanticDomainUpdateAccess().getValueTermRefParserRuleCall_2_0()); }
		ruleTermRef
		{ after(grammarAccess.getSemanticDomainUpdateAccess().getValueTermRefParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
