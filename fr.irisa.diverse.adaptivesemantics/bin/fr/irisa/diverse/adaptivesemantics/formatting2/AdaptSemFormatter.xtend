/*
 * generated by Xtext 2.25.0
 */
package fr.irisa.diverse.adaptivesemantics.formatting2

import com.google.inject.Inject
import fr.irisa.diverse.adaptivesemantics.model.adaptivesemantics.AdaptiveSemantics
import fr.irisa.diverse.adaptivesemantics.model.adaptivesemantics.Rule
import fr.irisa.diverse.adaptivesemantics.services.AdaptSemGrammarAccess
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument

class AdaptSemFormatter extends AbstractFormatter2 {
	
	@Inject extension AdaptSemGrammarAccess

	def dispatch void format(AdaptiveSemantics adaptiveSemantics, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		adaptiveSemantics.model.format
		for (_import : adaptiveSemantics.imports) {
			_import.format
		}
		for (rule : adaptiveSemantics.rules) {
			rule.format
		}
	}

	def dispatch void format(Rule rule, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		rule.conclusion.format
		for (reduction : rule.premises) {
			reduction.format
		}
		for (condition : rule.conditions) {
			condition.format
		}
	}
	
	// TODO: implement for Reduction
}
